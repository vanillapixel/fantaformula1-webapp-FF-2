/* tslint:disable */
/* eslint-disable */
/**
 * Fanta F 1 API
 * Fanta F 1 API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PitStopSummary,
} from '../models';
import {
    PitStopSummaryFromJSON,
    PitStopSummaryToJSON,
} from '../models';

export interface CountPitStopSummariesRequest {
    idGreaterThan?: number;
    idLessThan?: number;
    idGreaterThanOrEqual?: number;
    idLessThanOrEqual?: number;
    idEquals?: number;
    idNotEquals?: number;
    idSpecified?: boolean;
    idIn?: Array<number>;
    idNotIn?: Array<number>;
    numberStopsGreaterThan?: number;
    numberStopsLessThan?: number;
    numberStopsGreaterThanOrEqual?: number;
    numberStopsLessThanOrEqual?: number;
    numberStopsEquals?: number;
    numberStopsNotEquals?: number;
    numberStopsSpecified?: boolean;
    numberStopsIn?: Array<number>;
    numberStopsNotIn?: Array<number>;
    posContains?: string;
    posDoesNotContain?: string;
    posEquals?: string;
    posNotEquals?: string;
    posSpecified?: boolean;
    posIn?: Array<string>;
    posNotIn?: Array<string>;
    numberDriverContains?: string;
    numberDriverDoesNotContain?: string;
    numberDriverEquals?: string;
    numberDriverNotEquals?: string;
    numberDriverSpecified?: boolean;
    numberDriverIn?: Array<string>;
    numberDriverNotIn?: Array<string>;
    nameDriverContains?: string;
    nameDriverDoesNotContain?: string;
    nameDriverEquals?: string;
    nameDriverNotEquals?: string;
    nameDriverSpecified?: boolean;
    nameDriverIn?: Array<string>;
    nameDriverNotIn?: Array<string>;
    nameTeamContains?: string;
    nameTeamDoesNotContain?: string;
    nameTeamEquals?: string;
    nameTeamNotEquals?: string;
    nameTeamSpecified?: boolean;
    nameTeamIn?: Array<string>;
    nameTeamNotIn?: Array<string>;
    numberLapsOfBestStopContains?: string;
    numberLapsOfBestStopDoesNotContain?: string;
    numberLapsOfBestStopEquals?: string;
    numberLapsOfBestStopNotEquals?: string;
    numberLapsOfBestStopSpecified?: boolean;
    numberLapsOfBestStopIn?: Array<string>;
    numberLapsOfBestStopNotIn?: Array<string>;
    timeDayOfBestStopGreaterThan?: Date;
    timeDayOfBestStopLessThan?: Date;
    timeDayOfBestStopGreaterThanOrEqual?: Date;
    timeDayOfBestStopLessThanOrEqual?: Date;
    timeDayOfBestStopEquals?: Date;
    timeDayOfBestStopNotEquals?: Date;
    timeDayOfBestStopSpecified?: boolean;
    timeDayOfBestStopIn?: Array<Date>;
    timeDayOfBestStopNotIn?: Array<Date>;
    bestStopGreaterThan?: Date;
    bestStopLessThan?: Date;
    bestStopGreaterThanOrEqual?: Date;
    bestStopLessThanOrEqual?: Date;
    bestStopEquals?: Date;
    bestStopNotEquals?: Date;
    bestStopSpecified?: boolean;
    bestStopIn?: Array<Date>;
    bestStopNotIn?: Array<Date>;
    timeTotalStopsGreaterThan?: Date;
    timeTotalStopsLessThan?: Date;
    timeTotalStopsGreaterThanOrEqual?: Date;
    timeTotalStopsLessThanOrEqual?: Date;
    timeTotalStopsEquals?: Date;
    timeTotalStopsNotEquals?: Date;
    timeTotalStopsSpecified?: boolean;
    timeTotalStopsIn?: Array<Date>;
    timeTotalStopsNotIn?: Array<Date>;
    granPrixIdGreaterThan?: number;
    granPrixIdLessThan?: number;
    granPrixIdGreaterThanOrEqual?: number;
    granPrixIdLessThanOrEqual?: number;
    granPrixIdEquals?: number;
    granPrixIdNotEquals?: number;
    granPrixIdSpecified?: boolean;
    granPrixIdIn?: Array<number>;
    granPrixIdNotIn?: Array<number>;
    distinct?: boolean;
}

export interface CreatePitStopSummaryRequest {
    pitStopSummary: PitStopSummary;
}

export interface DeletePitStopSummaryRequest {
    id: number;
}

export interface GetAllPitStopSummariesRequest {
    idGreaterThan?: number;
    idLessThan?: number;
    idGreaterThanOrEqual?: number;
    idLessThanOrEqual?: number;
    idEquals?: number;
    idNotEquals?: number;
    idSpecified?: boolean;
    idIn?: Array<number>;
    idNotIn?: Array<number>;
    numberStopsGreaterThan?: number;
    numberStopsLessThan?: number;
    numberStopsGreaterThanOrEqual?: number;
    numberStopsLessThanOrEqual?: number;
    numberStopsEquals?: number;
    numberStopsNotEquals?: number;
    numberStopsSpecified?: boolean;
    numberStopsIn?: Array<number>;
    numberStopsNotIn?: Array<number>;
    posContains?: string;
    posDoesNotContain?: string;
    posEquals?: string;
    posNotEquals?: string;
    posSpecified?: boolean;
    posIn?: Array<string>;
    posNotIn?: Array<string>;
    numberDriverContains?: string;
    numberDriverDoesNotContain?: string;
    numberDriverEquals?: string;
    numberDriverNotEquals?: string;
    numberDriverSpecified?: boolean;
    numberDriverIn?: Array<string>;
    numberDriverNotIn?: Array<string>;
    nameDriverContains?: string;
    nameDriverDoesNotContain?: string;
    nameDriverEquals?: string;
    nameDriverNotEquals?: string;
    nameDriverSpecified?: boolean;
    nameDriverIn?: Array<string>;
    nameDriverNotIn?: Array<string>;
    nameTeamContains?: string;
    nameTeamDoesNotContain?: string;
    nameTeamEquals?: string;
    nameTeamNotEquals?: string;
    nameTeamSpecified?: boolean;
    nameTeamIn?: Array<string>;
    nameTeamNotIn?: Array<string>;
    numberLapsOfBestStopContains?: string;
    numberLapsOfBestStopDoesNotContain?: string;
    numberLapsOfBestStopEquals?: string;
    numberLapsOfBestStopNotEquals?: string;
    numberLapsOfBestStopSpecified?: boolean;
    numberLapsOfBestStopIn?: Array<string>;
    numberLapsOfBestStopNotIn?: Array<string>;
    timeDayOfBestStopGreaterThan?: Date;
    timeDayOfBestStopLessThan?: Date;
    timeDayOfBestStopGreaterThanOrEqual?: Date;
    timeDayOfBestStopLessThanOrEqual?: Date;
    timeDayOfBestStopEquals?: Date;
    timeDayOfBestStopNotEquals?: Date;
    timeDayOfBestStopSpecified?: boolean;
    timeDayOfBestStopIn?: Array<Date>;
    timeDayOfBestStopNotIn?: Array<Date>;
    bestStopGreaterThan?: Date;
    bestStopLessThan?: Date;
    bestStopGreaterThanOrEqual?: Date;
    bestStopLessThanOrEqual?: Date;
    bestStopEquals?: Date;
    bestStopNotEquals?: Date;
    bestStopSpecified?: boolean;
    bestStopIn?: Array<Date>;
    bestStopNotIn?: Array<Date>;
    timeTotalStopsGreaterThan?: Date;
    timeTotalStopsLessThan?: Date;
    timeTotalStopsGreaterThanOrEqual?: Date;
    timeTotalStopsLessThanOrEqual?: Date;
    timeTotalStopsEquals?: Date;
    timeTotalStopsNotEquals?: Date;
    timeTotalStopsSpecified?: boolean;
    timeTotalStopsIn?: Array<Date>;
    timeTotalStopsNotIn?: Array<Date>;
    granPrixIdGreaterThan?: number;
    granPrixIdLessThan?: number;
    granPrixIdGreaterThanOrEqual?: number;
    granPrixIdLessThanOrEqual?: number;
    granPrixIdEquals?: number;
    granPrixIdNotEquals?: number;
    granPrixIdSpecified?: boolean;
    granPrixIdIn?: Array<number>;
    granPrixIdNotIn?: Array<number>;
    distinct?: boolean;
}

export interface GetPitStopSummaryRequest {
    id: number;
}

export interface PartialUpdatePitStopSummaryRequest {
    id: number;
    pitStopSummary: PitStopSummary;
}

export interface UpdatePitStopSummaryRequest {
    id: number;
    pitStopSummary: PitStopSummary;
}

/**
 * 
 */
export class PitStopSummaryResourceApi extends runtime.BaseAPI {

    /**
     */
    async countPitStopSummariesRaw(requestParameters: CountPitStopSummariesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<number>> {
        const queryParameters: any = {};

        if (requestParameters.idGreaterThan !== undefined) {
            queryParameters['id.greaterThan'] = requestParameters.idGreaterThan;
        }

        if (requestParameters.idLessThan !== undefined) {
            queryParameters['id.lessThan'] = requestParameters.idLessThan;
        }

        if (requestParameters.idGreaterThanOrEqual !== undefined) {
            queryParameters['id.greaterThanOrEqual'] = requestParameters.idGreaterThanOrEqual;
        }

        if (requestParameters.idLessThanOrEqual !== undefined) {
            queryParameters['id.lessThanOrEqual'] = requestParameters.idLessThanOrEqual;
        }

        if (requestParameters.idEquals !== undefined) {
            queryParameters['id.equals'] = requestParameters.idEquals;
        }

        if (requestParameters.idNotEquals !== undefined) {
            queryParameters['id.notEquals'] = requestParameters.idNotEquals;
        }

        if (requestParameters.idSpecified !== undefined) {
            queryParameters['id.specified'] = requestParameters.idSpecified;
        }

        if (requestParameters.idIn) {
            queryParameters['id.in'] = requestParameters.idIn;
        }

        if (requestParameters.idNotIn) {
            queryParameters['id.notIn'] = requestParameters.idNotIn;
        }

        if (requestParameters.numberStopsGreaterThan !== undefined) {
            queryParameters['numberStops.greaterThan'] = requestParameters.numberStopsGreaterThan;
        }

        if (requestParameters.numberStopsLessThan !== undefined) {
            queryParameters['numberStops.lessThan'] = requestParameters.numberStopsLessThan;
        }

        if (requestParameters.numberStopsGreaterThanOrEqual !== undefined) {
            queryParameters['numberStops.greaterThanOrEqual'] = requestParameters.numberStopsGreaterThanOrEqual;
        }

        if (requestParameters.numberStopsLessThanOrEqual !== undefined) {
            queryParameters['numberStops.lessThanOrEqual'] = requestParameters.numberStopsLessThanOrEqual;
        }

        if (requestParameters.numberStopsEquals !== undefined) {
            queryParameters['numberStops.equals'] = requestParameters.numberStopsEquals;
        }

        if (requestParameters.numberStopsNotEquals !== undefined) {
            queryParameters['numberStops.notEquals'] = requestParameters.numberStopsNotEquals;
        }

        if (requestParameters.numberStopsSpecified !== undefined) {
            queryParameters['numberStops.specified'] = requestParameters.numberStopsSpecified;
        }

        if (requestParameters.numberStopsIn) {
            queryParameters['numberStops.in'] = requestParameters.numberStopsIn;
        }

        if (requestParameters.numberStopsNotIn) {
            queryParameters['numberStops.notIn'] = requestParameters.numberStopsNotIn;
        }

        if (requestParameters.posContains !== undefined) {
            queryParameters['pos.contains'] = requestParameters.posContains;
        }

        if (requestParameters.posDoesNotContain !== undefined) {
            queryParameters['pos.doesNotContain'] = requestParameters.posDoesNotContain;
        }

        if (requestParameters.posEquals !== undefined) {
            queryParameters['pos.equals'] = requestParameters.posEquals;
        }

        if (requestParameters.posNotEquals !== undefined) {
            queryParameters['pos.notEquals'] = requestParameters.posNotEquals;
        }

        if (requestParameters.posSpecified !== undefined) {
            queryParameters['pos.specified'] = requestParameters.posSpecified;
        }

        if (requestParameters.posIn) {
            queryParameters['pos.in'] = requestParameters.posIn;
        }

        if (requestParameters.posNotIn) {
            queryParameters['pos.notIn'] = requestParameters.posNotIn;
        }

        if (requestParameters.numberDriverContains !== undefined) {
            queryParameters['numberDriver.contains'] = requestParameters.numberDriverContains;
        }

        if (requestParameters.numberDriverDoesNotContain !== undefined) {
            queryParameters['numberDriver.doesNotContain'] = requestParameters.numberDriverDoesNotContain;
        }

        if (requestParameters.numberDriverEquals !== undefined) {
            queryParameters['numberDriver.equals'] = requestParameters.numberDriverEquals;
        }

        if (requestParameters.numberDriverNotEquals !== undefined) {
            queryParameters['numberDriver.notEquals'] = requestParameters.numberDriverNotEquals;
        }

        if (requestParameters.numberDriverSpecified !== undefined) {
            queryParameters['numberDriver.specified'] = requestParameters.numberDriverSpecified;
        }

        if (requestParameters.numberDriverIn) {
            queryParameters['numberDriver.in'] = requestParameters.numberDriverIn;
        }

        if (requestParameters.numberDriverNotIn) {
            queryParameters['numberDriver.notIn'] = requestParameters.numberDriverNotIn;
        }

        if (requestParameters.nameDriverContains !== undefined) {
            queryParameters['nameDriver.contains'] = requestParameters.nameDriverContains;
        }

        if (requestParameters.nameDriverDoesNotContain !== undefined) {
            queryParameters['nameDriver.doesNotContain'] = requestParameters.nameDriverDoesNotContain;
        }

        if (requestParameters.nameDriverEquals !== undefined) {
            queryParameters['nameDriver.equals'] = requestParameters.nameDriverEquals;
        }

        if (requestParameters.nameDriverNotEquals !== undefined) {
            queryParameters['nameDriver.notEquals'] = requestParameters.nameDriverNotEquals;
        }

        if (requestParameters.nameDriverSpecified !== undefined) {
            queryParameters['nameDriver.specified'] = requestParameters.nameDriverSpecified;
        }

        if (requestParameters.nameDriverIn) {
            queryParameters['nameDriver.in'] = requestParameters.nameDriverIn;
        }

        if (requestParameters.nameDriverNotIn) {
            queryParameters['nameDriver.notIn'] = requestParameters.nameDriverNotIn;
        }

        if (requestParameters.nameTeamContains !== undefined) {
            queryParameters['nameTeam.contains'] = requestParameters.nameTeamContains;
        }

        if (requestParameters.nameTeamDoesNotContain !== undefined) {
            queryParameters['nameTeam.doesNotContain'] = requestParameters.nameTeamDoesNotContain;
        }

        if (requestParameters.nameTeamEquals !== undefined) {
            queryParameters['nameTeam.equals'] = requestParameters.nameTeamEquals;
        }

        if (requestParameters.nameTeamNotEquals !== undefined) {
            queryParameters['nameTeam.notEquals'] = requestParameters.nameTeamNotEquals;
        }

        if (requestParameters.nameTeamSpecified !== undefined) {
            queryParameters['nameTeam.specified'] = requestParameters.nameTeamSpecified;
        }

        if (requestParameters.nameTeamIn) {
            queryParameters['nameTeam.in'] = requestParameters.nameTeamIn;
        }

        if (requestParameters.nameTeamNotIn) {
            queryParameters['nameTeam.notIn'] = requestParameters.nameTeamNotIn;
        }

        if (requestParameters.numberLapsOfBestStopContains !== undefined) {
            queryParameters['numberLapsOfBestStop.contains'] = requestParameters.numberLapsOfBestStopContains;
        }

        if (requestParameters.numberLapsOfBestStopDoesNotContain !== undefined) {
            queryParameters['numberLapsOfBestStop.doesNotContain'] = requestParameters.numberLapsOfBestStopDoesNotContain;
        }

        if (requestParameters.numberLapsOfBestStopEquals !== undefined) {
            queryParameters['numberLapsOfBestStop.equals'] = requestParameters.numberLapsOfBestStopEquals;
        }

        if (requestParameters.numberLapsOfBestStopNotEquals !== undefined) {
            queryParameters['numberLapsOfBestStop.notEquals'] = requestParameters.numberLapsOfBestStopNotEquals;
        }

        if (requestParameters.numberLapsOfBestStopSpecified !== undefined) {
            queryParameters['numberLapsOfBestStop.specified'] = requestParameters.numberLapsOfBestStopSpecified;
        }

        if (requestParameters.numberLapsOfBestStopIn) {
            queryParameters['numberLapsOfBestStop.in'] = requestParameters.numberLapsOfBestStopIn;
        }

        if (requestParameters.numberLapsOfBestStopNotIn) {
            queryParameters['numberLapsOfBestStop.notIn'] = requestParameters.numberLapsOfBestStopNotIn;
        }

        if (requestParameters.timeDayOfBestStopGreaterThan !== undefined) {
            queryParameters['timeDayOfBestStop.greaterThan'] = (requestParameters.timeDayOfBestStopGreaterThan as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopLessThan !== undefined) {
            queryParameters['timeDayOfBestStop.lessThan'] = (requestParameters.timeDayOfBestStopLessThan as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopGreaterThanOrEqual !== undefined) {
            queryParameters['timeDayOfBestStop.greaterThanOrEqual'] = (requestParameters.timeDayOfBestStopGreaterThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopLessThanOrEqual !== undefined) {
            queryParameters['timeDayOfBestStop.lessThanOrEqual'] = (requestParameters.timeDayOfBestStopLessThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopEquals !== undefined) {
            queryParameters['timeDayOfBestStop.equals'] = (requestParameters.timeDayOfBestStopEquals as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopNotEquals !== undefined) {
            queryParameters['timeDayOfBestStop.notEquals'] = (requestParameters.timeDayOfBestStopNotEquals as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopSpecified !== undefined) {
            queryParameters['timeDayOfBestStop.specified'] = requestParameters.timeDayOfBestStopSpecified;
        }

        if (requestParameters.timeDayOfBestStopIn) {
            queryParameters['timeDayOfBestStop.in'] = requestParameters.timeDayOfBestStopIn;
        }

        if (requestParameters.timeDayOfBestStopNotIn) {
            queryParameters['timeDayOfBestStop.notIn'] = requestParameters.timeDayOfBestStopNotIn;
        }

        if (requestParameters.bestStopGreaterThan !== undefined) {
            queryParameters['bestStop.greaterThan'] = (requestParameters.bestStopGreaterThan as any).toISOString();
        }

        if (requestParameters.bestStopLessThan !== undefined) {
            queryParameters['bestStop.lessThan'] = (requestParameters.bestStopLessThan as any).toISOString();
        }

        if (requestParameters.bestStopGreaterThanOrEqual !== undefined) {
            queryParameters['bestStop.greaterThanOrEqual'] = (requestParameters.bestStopGreaterThanOrEqual as any).toISOString();
        }

        if (requestParameters.bestStopLessThanOrEqual !== undefined) {
            queryParameters['bestStop.lessThanOrEqual'] = (requestParameters.bestStopLessThanOrEqual as any).toISOString();
        }

        if (requestParameters.bestStopEquals !== undefined) {
            queryParameters['bestStop.equals'] = (requestParameters.bestStopEquals as any).toISOString();
        }

        if (requestParameters.bestStopNotEquals !== undefined) {
            queryParameters['bestStop.notEquals'] = (requestParameters.bestStopNotEquals as any).toISOString();
        }

        if (requestParameters.bestStopSpecified !== undefined) {
            queryParameters['bestStop.specified'] = requestParameters.bestStopSpecified;
        }

        if (requestParameters.bestStopIn) {
            queryParameters['bestStop.in'] = requestParameters.bestStopIn;
        }

        if (requestParameters.bestStopNotIn) {
            queryParameters['bestStop.notIn'] = requestParameters.bestStopNotIn;
        }

        if (requestParameters.timeTotalStopsGreaterThan !== undefined) {
            queryParameters['timeTotalStops.greaterThan'] = (requestParameters.timeTotalStopsGreaterThan as any).toISOString();
        }

        if (requestParameters.timeTotalStopsLessThan !== undefined) {
            queryParameters['timeTotalStops.lessThan'] = (requestParameters.timeTotalStopsLessThan as any).toISOString();
        }

        if (requestParameters.timeTotalStopsGreaterThanOrEqual !== undefined) {
            queryParameters['timeTotalStops.greaterThanOrEqual'] = (requestParameters.timeTotalStopsGreaterThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeTotalStopsLessThanOrEqual !== undefined) {
            queryParameters['timeTotalStops.lessThanOrEqual'] = (requestParameters.timeTotalStopsLessThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeTotalStopsEquals !== undefined) {
            queryParameters['timeTotalStops.equals'] = (requestParameters.timeTotalStopsEquals as any).toISOString();
        }

        if (requestParameters.timeTotalStopsNotEquals !== undefined) {
            queryParameters['timeTotalStops.notEquals'] = (requestParameters.timeTotalStopsNotEquals as any).toISOString();
        }

        if (requestParameters.timeTotalStopsSpecified !== undefined) {
            queryParameters['timeTotalStops.specified'] = requestParameters.timeTotalStopsSpecified;
        }

        if (requestParameters.timeTotalStopsIn) {
            queryParameters['timeTotalStops.in'] = requestParameters.timeTotalStopsIn;
        }

        if (requestParameters.timeTotalStopsNotIn) {
            queryParameters['timeTotalStops.notIn'] = requestParameters.timeTotalStopsNotIn;
        }

        if (requestParameters.granPrixIdGreaterThan !== undefined) {
            queryParameters['granPrixId.greaterThan'] = requestParameters.granPrixIdGreaterThan;
        }

        if (requestParameters.granPrixIdLessThan !== undefined) {
            queryParameters['granPrixId.lessThan'] = requestParameters.granPrixIdLessThan;
        }

        if (requestParameters.granPrixIdGreaterThanOrEqual !== undefined) {
            queryParameters['granPrixId.greaterThanOrEqual'] = requestParameters.granPrixIdGreaterThanOrEqual;
        }

        if (requestParameters.granPrixIdLessThanOrEqual !== undefined) {
            queryParameters['granPrixId.lessThanOrEqual'] = requestParameters.granPrixIdLessThanOrEqual;
        }

        if (requestParameters.granPrixIdEquals !== undefined) {
            queryParameters['granPrixId.equals'] = requestParameters.granPrixIdEquals;
        }

        if (requestParameters.granPrixIdNotEquals !== undefined) {
            queryParameters['granPrixId.notEquals'] = requestParameters.granPrixIdNotEquals;
        }

        if (requestParameters.granPrixIdSpecified !== undefined) {
            queryParameters['granPrixId.specified'] = requestParameters.granPrixIdSpecified;
        }

        if (requestParameters.granPrixIdIn) {
            queryParameters['granPrixId.in'] = requestParameters.granPrixIdIn;
        }

        if (requestParameters.granPrixIdNotIn) {
            queryParameters['granPrixId.notIn'] = requestParameters.granPrixIdNotIn;
        }

        if (requestParameters.distinct !== undefined) {
            queryParameters['distinct'] = requestParameters.distinct;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/pit-stop-summaries/count`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async countPitStopSummaries(requestParameters: CountPitStopSummariesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<number> {
        const response = await this.countPitStopSummariesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async createPitStopSummaryRaw(requestParameters: CreatePitStopSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PitStopSummary>> {
        if (requestParameters.pitStopSummary === null || requestParameters.pitStopSummary === undefined) {
            throw new runtime.RequiredError('pitStopSummary','Required parameter requestParameters.pitStopSummary was null or undefined when calling createPitStopSummary.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/pit-stop-summaries`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PitStopSummaryToJSON(requestParameters.pitStopSummary),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PitStopSummaryFromJSON(jsonValue));
    }

    /**
     */
    async createPitStopSummary(requestParameters: CreatePitStopSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PitStopSummary> {
        const response = await this.createPitStopSummaryRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async deletePitStopSummaryRaw(requestParameters: DeletePitStopSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deletePitStopSummary.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/pit-stop-summaries/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async deletePitStopSummary(requestParameters: DeletePitStopSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deletePitStopSummaryRaw(requestParameters, initOverrides);
    }

    /**
     */
    async getAllPitStopSummariesRaw(requestParameters: GetAllPitStopSummariesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PitStopSummary>>> {
        const queryParameters: any = {};

        if (requestParameters.idGreaterThan !== undefined) {
            queryParameters['id.greaterThan'] = requestParameters.idGreaterThan;
        }

        if (requestParameters.idLessThan !== undefined) {
            queryParameters['id.lessThan'] = requestParameters.idLessThan;
        }

        if (requestParameters.idGreaterThanOrEqual !== undefined) {
            queryParameters['id.greaterThanOrEqual'] = requestParameters.idGreaterThanOrEqual;
        }

        if (requestParameters.idLessThanOrEqual !== undefined) {
            queryParameters['id.lessThanOrEqual'] = requestParameters.idLessThanOrEqual;
        }

        if (requestParameters.idEquals !== undefined) {
            queryParameters['id.equals'] = requestParameters.idEquals;
        }

        if (requestParameters.idNotEquals !== undefined) {
            queryParameters['id.notEquals'] = requestParameters.idNotEquals;
        }

        if (requestParameters.idSpecified !== undefined) {
            queryParameters['id.specified'] = requestParameters.idSpecified;
        }

        if (requestParameters.idIn) {
            queryParameters['id.in'] = requestParameters.idIn;
        }

        if (requestParameters.idNotIn) {
            queryParameters['id.notIn'] = requestParameters.idNotIn;
        }

        if (requestParameters.numberStopsGreaterThan !== undefined) {
            queryParameters['numberStops.greaterThan'] = requestParameters.numberStopsGreaterThan;
        }

        if (requestParameters.numberStopsLessThan !== undefined) {
            queryParameters['numberStops.lessThan'] = requestParameters.numberStopsLessThan;
        }

        if (requestParameters.numberStopsGreaterThanOrEqual !== undefined) {
            queryParameters['numberStops.greaterThanOrEqual'] = requestParameters.numberStopsGreaterThanOrEqual;
        }

        if (requestParameters.numberStopsLessThanOrEqual !== undefined) {
            queryParameters['numberStops.lessThanOrEqual'] = requestParameters.numberStopsLessThanOrEqual;
        }

        if (requestParameters.numberStopsEquals !== undefined) {
            queryParameters['numberStops.equals'] = requestParameters.numberStopsEquals;
        }

        if (requestParameters.numberStopsNotEquals !== undefined) {
            queryParameters['numberStops.notEquals'] = requestParameters.numberStopsNotEquals;
        }

        if (requestParameters.numberStopsSpecified !== undefined) {
            queryParameters['numberStops.specified'] = requestParameters.numberStopsSpecified;
        }

        if (requestParameters.numberStopsIn) {
            queryParameters['numberStops.in'] = requestParameters.numberStopsIn;
        }

        if (requestParameters.numberStopsNotIn) {
            queryParameters['numberStops.notIn'] = requestParameters.numberStopsNotIn;
        }

        if (requestParameters.posContains !== undefined) {
            queryParameters['pos.contains'] = requestParameters.posContains;
        }

        if (requestParameters.posDoesNotContain !== undefined) {
            queryParameters['pos.doesNotContain'] = requestParameters.posDoesNotContain;
        }

        if (requestParameters.posEquals !== undefined) {
            queryParameters['pos.equals'] = requestParameters.posEquals;
        }

        if (requestParameters.posNotEquals !== undefined) {
            queryParameters['pos.notEquals'] = requestParameters.posNotEquals;
        }

        if (requestParameters.posSpecified !== undefined) {
            queryParameters['pos.specified'] = requestParameters.posSpecified;
        }

        if (requestParameters.posIn) {
            queryParameters['pos.in'] = requestParameters.posIn;
        }

        if (requestParameters.posNotIn) {
            queryParameters['pos.notIn'] = requestParameters.posNotIn;
        }

        if (requestParameters.numberDriverContains !== undefined) {
            queryParameters['numberDriver.contains'] = requestParameters.numberDriverContains;
        }

        if (requestParameters.numberDriverDoesNotContain !== undefined) {
            queryParameters['numberDriver.doesNotContain'] = requestParameters.numberDriverDoesNotContain;
        }

        if (requestParameters.numberDriverEquals !== undefined) {
            queryParameters['numberDriver.equals'] = requestParameters.numberDriverEquals;
        }

        if (requestParameters.numberDriverNotEquals !== undefined) {
            queryParameters['numberDriver.notEquals'] = requestParameters.numberDriverNotEquals;
        }

        if (requestParameters.numberDriverSpecified !== undefined) {
            queryParameters['numberDriver.specified'] = requestParameters.numberDriverSpecified;
        }

        if (requestParameters.numberDriverIn) {
            queryParameters['numberDriver.in'] = requestParameters.numberDriverIn;
        }

        if (requestParameters.numberDriverNotIn) {
            queryParameters['numberDriver.notIn'] = requestParameters.numberDriverNotIn;
        }

        if (requestParameters.nameDriverContains !== undefined) {
            queryParameters['nameDriver.contains'] = requestParameters.nameDriverContains;
        }

        if (requestParameters.nameDriverDoesNotContain !== undefined) {
            queryParameters['nameDriver.doesNotContain'] = requestParameters.nameDriverDoesNotContain;
        }

        if (requestParameters.nameDriverEquals !== undefined) {
            queryParameters['nameDriver.equals'] = requestParameters.nameDriverEquals;
        }

        if (requestParameters.nameDriverNotEquals !== undefined) {
            queryParameters['nameDriver.notEquals'] = requestParameters.nameDriverNotEquals;
        }

        if (requestParameters.nameDriverSpecified !== undefined) {
            queryParameters['nameDriver.specified'] = requestParameters.nameDriverSpecified;
        }

        if (requestParameters.nameDriverIn) {
            queryParameters['nameDriver.in'] = requestParameters.nameDriverIn;
        }

        if (requestParameters.nameDriverNotIn) {
            queryParameters['nameDriver.notIn'] = requestParameters.nameDriverNotIn;
        }

        if (requestParameters.nameTeamContains !== undefined) {
            queryParameters['nameTeam.contains'] = requestParameters.nameTeamContains;
        }

        if (requestParameters.nameTeamDoesNotContain !== undefined) {
            queryParameters['nameTeam.doesNotContain'] = requestParameters.nameTeamDoesNotContain;
        }

        if (requestParameters.nameTeamEquals !== undefined) {
            queryParameters['nameTeam.equals'] = requestParameters.nameTeamEquals;
        }

        if (requestParameters.nameTeamNotEquals !== undefined) {
            queryParameters['nameTeam.notEquals'] = requestParameters.nameTeamNotEquals;
        }

        if (requestParameters.nameTeamSpecified !== undefined) {
            queryParameters['nameTeam.specified'] = requestParameters.nameTeamSpecified;
        }

        if (requestParameters.nameTeamIn) {
            queryParameters['nameTeam.in'] = requestParameters.nameTeamIn;
        }

        if (requestParameters.nameTeamNotIn) {
            queryParameters['nameTeam.notIn'] = requestParameters.nameTeamNotIn;
        }

        if (requestParameters.numberLapsOfBestStopContains !== undefined) {
            queryParameters['numberLapsOfBestStop.contains'] = requestParameters.numberLapsOfBestStopContains;
        }

        if (requestParameters.numberLapsOfBestStopDoesNotContain !== undefined) {
            queryParameters['numberLapsOfBestStop.doesNotContain'] = requestParameters.numberLapsOfBestStopDoesNotContain;
        }

        if (requestParameters.numberLapsOfBestStopEquals !== undefined) {
            queryParameters['numberLapsOfBestStop.equals'] = requestParameters.numberLapsOfBestStopEquals;
        }

        if (requestParameters.numberLapsOfBestStopNotEquals !== undefined) {
            queryParameters['numberLapsOfBestStop.notEquals'] = requestParameters.numberLapsOfBestStopNotEquals;
        }

        if (requestParameters.numberLapsOfBestStopSpecified !== undefined) {
            queryParameters['numberLapsOfBestStop.specified'] = requestParameters.numberLapsOfBestStopSpecified;
        }

        if (requestParameters.numberLapsOfBestStopIn) {
            queryParameters['numberLapsOfBestStop.in'] = requestParameters.numberLapsOfBestStopIn;
        }

        if (requestParameters.numberLapsOfBestStopNotIn) {
            queryParameters['numberLapsOfBestStop.notIn'] = requestParameters.numberLapsOfBestStopNotIn;
        }

        if (requestParameters.timeDayOfBestStopGreaterThan !== undefined) {
            queryParameters['timeDayOfBestStop.greaterThan'] = (requestParameters.timeDayOfBestStopGreaterThan as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopLessThan !== undefined) {
            queryParameters['timeDayOfBestStop.lessThan'] = (requestParameters.timeDayOfBestStopLessThan as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopGreaterThanOrEqual !== undefined) {
            queryParameters['timeDayOfBestStop.greaterThanOrEqual'] = (requestParameters.timeDayOfBestStopGreaterThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopLessThanOrEqual !== undefined) {
            queryParameters['timeDayOfBestStop.lessThanOrEqual'] = (requestParameters.timeDayOfBestStopLessThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopEquals !== undefined) {
            queryParameters['timeDayOfBestStop.equals'] = (requestParameters.timeDayOfBestStopEquals as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopNotEquals !== undefined) {
            queryParameters['timeDayOfBestStop.notEquals'] = (requestParameters.timeDayOfBestStopNotEquals as any).toISOString();
        }

        if (requestParameters.timeDayOfBestStopSpecified !== undefined) {
            queryParameters['timeDayOfBestStop.specified'] = requestParameters.timeDayOfBestStopSpecified;
        }

        if (requestParameters.timeDayOfBestStopIn) {
            queryParameters['timeDayOfBestStop.in'] = requestParameters.timeDayOfBestStopIn;
        }

        if (requestParameters.timeDayOfBestStopNotIn) {
            queryParameters['timeDayOfBestStop.notIn'] = requestParameters.timeDayOfBestStopNotIn;
        }

        if (requestParameters.bestStopGreaterThan !== undefined) {
            queryParameters['bestStop.greaterThan'] = (requestParameters.bestStopGreaterThan as any).toISOString();
        }

        if (requestParameters.bestStopLessThan !== undefined) {
            queryParameters['bestStop.lessThan'] = (requestParameters.bestStopLessThan as any).toISOString();
        }

        if (requestParameters.bestStopGreaterThanOrEqual !== undefined) {
            queryParameters['bestStop.greaterThanOrEqual'] = (requestParameters.bestStopGreaterThanOrEqual as any).toISOString();
        }

        if (requestParameters.bestStopLessThanOrEqual !== undefined) {
            queryParameters['bestStop.lessThanOrEqual'] = (requestParameters.bestStopLessThanOrEqual as any).toISOString();
        }

        if (requestParameters.bestStopEquals !== undefined) {
            queryParameters['bestStop.equals'] = (requestParameters.bestStopEquals as any).toISOString();
        }

        if (requestParameters.bestStopNotEquals !== undefined) {
            queryParameters['bestStop.notEquals'] = (requestParameters.bestStopNotEquals as any).toISOString();
        }

        if (requestParameters.bestStopSpecified !== undefined) {
            queryParameters['bestStop.specified'] = requestParameters.bestStopSpecified;
        }

        if (requestParameters.bestStopIn) {
            queryParameters['bestStop.in'] = requestParameters.bestStopIn;
        }

        if (requestParameters.bestStopNotIn) {
            queryParameters['bestStop.notIn'] = requestParameters.bestStopNotIn;
        }

        if (requestParameters.timeTotalStopsGreaterThan !== undefined) {
            queryParameters['timeTotalStops.greaterThan'] = (requestParameters.timeTotalStopsGreaterThan as any).toISOString();
        }

        if (requestParameters.timeTotalStopsLessThan !== undefined) {
            queryParameters['timeTotalStops.lessThan'] = (requestParameters.timeTotalStopsLessThan as any).toISOString();
        }

        if (requestParameters.timeTotalStopsGreaterThanOrEqual !== undefined) {
            queryParameters['timeTotalStops.greaterThanOrEqual'] = (requestParameters.timeTotalStopsGreaterThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeTotalStopsLessThanOrEqual !== undefined) {
            queryParameters['timeTotalStops.lessThanOrEqual'] = (requestParameters.timeTotalStopsLessThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeTotalStopsEquals !== undefined) {
            queryParameters['timeTotalStops.equals'] = (requestParameters.timeTotalStopsEquals as any).toISOString();
        }

        if (requestParameters.timeTotalStopsNotEquals !== undefined) {
            queryParameters['timeTotalStops.notEquals'] = (requestParameters.timeTotalStopsNotEquals as any).toISOString();
        }

        if (requestParameters.timeTotalStopsSpecified !== undefined) {
            queryParameters['timeTotalStops.specified'] = requestParameters.timeTotalStopsSpecified;
        }

        if (requestParameters.timeTotalStopsIn) {
            queryParameters['timeTotalStops.in'] = requestParameters.timeTotalStopsIn;
        }

        if (requestParameters.timeTotalStopsNotIn) {
            queryParameters['timeTotalStops.notIn'] = requestParameters.timeTotalStopsNotIn;
        }

        if (requestParameters.granPrixIdGreaterThan !== undefined) {
            queryParameters['granPrixId.greaterThan'] = requestParameters.granPrixIdGreaterThan;
        }

        if (requestParameters.granPrixIdLessThan !== undefined) {
            queryParameters['granPrixId.lessThan'] = requestParameters.granPrixIdLessThan;
        }

        if (requestParameters.granPrixIdGreaterThanOrEqual !== undefined) {
            queryParameters['granPrixId.greaterThanOrEqual'] = requestParameters.granPrixIdGreaterThanOrEqual;
        }

        if (requestParameters.granPrixIdLessThanOrEqual !== undefined) {
            queryParameters['granPrixId.lessThanOrEqual'] = requestParameters.granPrixIdLessThanOrEqual;
        }

        if (requestParameters.granPrixIdEquals !== undefined) {
            queryParameters['granPrixId.equals'] = requestParameters.granPrixIdEquals;
        }

        if (requestParameters.granPrixIdNotEquals !== undefined) {
            queryParameters['granPrixId.notEquals'] = requestParameters.granPrixIdNotEquals;
        }

        if (requestParameters.granPrixIdSpecified !== undefined) {
            queryParameters['granPrixId.specified'] = requestParameters.granPrixIdSpecified;
        }

        if (requestParameters.granPrixIdIn) {
            queryParameters['granPrixId.in'] = requestParameters.granPrixIdIn;
        }

        if (requestParameters.granPrixIdNotIn) {
            queryParameters['granPrixId.notIn'] = requestParameters.granPrixIdNotIn;
        }

        if (requestParameters.distinct !== undefined) {
            queryParameters['distinct'] = requestParameters.distinct;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/pit-stop-summaries`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PitStopSummaryFromJSON));
    }

    /**
     */
    async getAllPitStopSummaries(requestParameters: GetAllPitStopSummariesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PitStopSummary>> {
        const response = await this.getAllPitStopSummariesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getPitStopSummaryRaw(requestParameters: GetPitStopSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PitStopSummary>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getPitStopSummary.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/pit-stop-summaries/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PitStopSummaryFromJSON(jsonValue));
    }

    /**
     */
    async getPitStopSummary(requestParameters: GetPitStopSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PitStopSummary> {
        const response = await this.getPitStopSummaryRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async partialUpdatePitStopSummaryRaw(requestParameters: PartialUpdatePitStopSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PitStopSummary>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling partialUpdatePitStopSummary.');
        }

        if (requestParameters.pitStopSummary === null || requestParameters.pitStopSummary === undefined) {
            throw new runtime.RequiredError('pitStopSummary','Required parameter requestParameters.pitStopSummary was null or undefined when calling partialUpdatePitStopSummary.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/pit-stop-summaries/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: PitStopSummaryToJSON(requestParameters.pitStopSummary),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PitStopSummaryFromJSON(jsonValue));
    }

    /**
     */
    async partialUpdatePitStopSummary(requestParameters: PartialUpdatePitStopSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PitStopSummary> {
        const response = await this.partialUpdatePitStopSummaryRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async updatePitStopSummaryRaw(requestParameters: UpdatePitStopSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PitStopSummary>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updatePitStopSummary.');
        }

        if (requestParameters.pitStopSummary === null || requestParameters.pitStopSummary === undefined) {
            throw new runtime.RequiredError('pitStopSummary','Required parameter requestParameters.pitStopSummary was null or undefined when calling updatePitStopSummary.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/pit-stop-summaries/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: PitStopSummaryToJSON(requestParameters.pitStopSummary),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PitStopSummaryFromJSON(jsonValue));
    }

    /**
     */
    async updatePitStopSummary(requestParameters: UpdatePitStopSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PitStopSummary> {
        const response = await this.updatePitStopSummaryRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
