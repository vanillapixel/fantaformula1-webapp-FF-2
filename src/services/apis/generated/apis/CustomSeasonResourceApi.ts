/* tslint:disable */
/* eslint-disable */
/**
 * Fanta F 1 API
 * Fanta F 1 API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  SeasonDTO,
} from '../models';
import {
    SeasonDTOFromJSON,
    SeasonDTOToJSON,
} from '../models';

export interface GetCustomSeasonRequest {
    year: string;
}

/**
 * 
 */
export class CustomSeasonResourceApi extends runtime.BaseAPI {

    /**
     */
    async getAllCurrentSeasonRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SeasonDTO>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/custom/season`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SeasonDTOFromJSON(jsonValue));
    }

    /**
     */
    async getAllCurrentSeason(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SeasonDTO> {
        const response = await this.getAllCurrentSeasonRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async getCustomSeasonRaw(requestParameters: GetCustomSeasonRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters.year === null || requestParameters.year === undefined) {
            throw new runtime.RequiredError('year','Required parameter requestParameters.year was null or undefined when calling getCustomSeason.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/custom/season/{year}`.replace(`{${"year"}}`, encodeURIComponent(String(requestParameters.year))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async getCustomSeason(requestParameters: GetCustomSeasonRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.getCustomSeasonRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
