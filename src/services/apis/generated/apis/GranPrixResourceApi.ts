/* tslint:disable */
/* eslint-disable */
/**
 * Fanta F 1 API
 * Fanta F 1 API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GranPrix,
} from '../models';
import {
    GranPrixFromJSON,
    GranPrixToJSON,
} from '../models';

export interface CountGranPrixesRequest {
    idGreaterThan?: number;
    idLessThan?: number;
    idGreaterThanOrEqual?: number;
    idLessThanOrEqual?: number;
    idEquals?: number;
    idNotEquals?: number;
    idSpecified?: boolean;
    idIn?: Array<number>;
    idNotIn?: Array<number>;
    dateGreaterThan?: Date;
    dateLessThan?: Date;
    dateGreaterThanOrEqual?: Date;
    dateLessThanOrEqual?: Date;
    dateEquals?: Date;
    dateNotEquals?: Date;
    dateSpecified?: boolean;
    dateIn?: Array<Date>;
    dateNotIn?: Array<Date>;
    nameContains?: string;
    nameDoesNotContain?: string;
    nameEquals?: string;
    nameNotEquals?: string;
    nameSpecified?: boolean;
    nameIn?: Array<string>;
    nameNotIn?: Array<string>;
    winnerContains?: string;
    winnerDoesNotContain?: string;
    winnerEquals?: string;
    winnerNotEquals?: string;
    winnerSpecified?: boolean;
    winnerIn?: Array<string>;
    winnerNotIn?: Array<string>;
    winnerTeamContains?: string;
    winnerTeamDoesNotContain?: string;
    winnerTeamEquals?: string;
    winnerTeamNotEquals?: string;
    winnerTeamSpecified?: boolean;
    winnerTeamIn?: Array<string>;
    winnerTeamNotIn?: Array<string>;
    lapsGreaterThan?: number;
    lapsLessThan?: number;
    lapsGreaterThanOrEqual?: number;
    lapsLessThanOrEqual?: number;
    lapsEquals?: number;
    lapsNotEquals?: number;
    lapsSpecified?: boolean;
    lapsIn?: Array<number>;
    lapsNotIn?: Array<number>;
    timeGreaterThan?: Date;
    timeLessThan?: Date;
    timeGreaterThanOrEqual?: Date;
    timeLessThanOrEqual?: Date;
    timeEquals?: Date;
    timeNotEquals?: Date;
    timeSpecified?: boolean;
    timeIn?: Array<Date>;
    timeNotIn?: Array<Date>;
    circuitIdGreaterThan?: number;
    circuitIdLessThan?: number;
    circuitIdGreaterThanOrEqual?: number;
    circuitIdLessThanOrEqual?: number;
    circuitIdEquals?: number;
    circuitIdNotEquals?: number;
    circuitIdSpecified?: boolean;
    circuitIdIn?: Array<number>;
    circuitIdNotIn?: Array<number>;
    fastestLapsIdGreaterThan?: number;
    fastestLapsIdLessThan?: number;
    fastestLapsIdGreaterThanOrEqual?: number;
    fastestLapsIdLessThanOrEqual?: number;
    fastestLapsIdEquals?: number;
    fastestLapsIdNotEquals?: number;
    fastestLapsIdSpecified?: boolean;
    fastestLapsIdIn?: Array<number>;
    fastestLapsIdNotIn?: Array<number>;
    pitStopSummaryIdGreaterThan?: number;
    pitStopSummaryIdLessThan?: number;
    pitStopSummaryIdGreaterThanOrEqual?: number;
    pitStopSummaryIdLessThanOrEqual?: number;
    pitStopSummaryIdEquals?: number;
    pitStopSummaryIdNotEquals?: number;
    pitStopSummaryIdSpecified?: boolean;
    pitStopSummaryIdIn?: Array<number>;
    pitStopSummaryIdNotIn?: Array<number>;
    qualifyingIdGreaterThan?: number;
    qualifyingIdLessThan?: number;
    qualifyingIdGreaterThanOrEqual?: number;
    qualifyingIdLessThanOrEqual?: number;
    qualifyingIdEquals?: number;
    qualifyingIdNotEquals?: number;
    qualifyingIdSpecified?: boolean;
    qualifyingIdIn?: Array<number>;
    qualifyingIdNotIn?: Array<number>;
    raceResultIdGreaterThan?: number;
    raceResultIdLessThan?: number;
    raceResultIdGreaterThanOrEqual?: number;
    raceResultIdLessThanOrEqual?: number;
    raceResultIdEquals?: number;
    raceResultIdNotEquals?: number;
    raceResultIdSpecified?: boolean;
    raceResultIdIn?: Array<number>;
    raceResultIdNotIn?: Array<number>;
    startingGridIdGreaterThan?: number;
    startingGridIdLessThan?: number;
    startingGridIdGreaterThanOrEqual?: number;
    startingGridIdLessThanOrEqual?: number;
    startingGridIdEquals?: number;
    startingGridIdNotEquals?: number;
    startingGridIdSpecified?: boolean;
    startingGridIdIn?: Array<number>;
    startingGridIdNotIn?: Array<number>;
    practiceIdGreaterThan?: number;
    practiceIdLessThan?: number;
    practiceIdGreaterThanOrEqual?: number;
    practiceIdLessThanOrEqual?: number;
    practiceIdEquals?: number;
    practiceIdNotEquals?: number;
    practiceIdSpecified?: boolean;
    practiceIdIn?: Array<number>;
    practiceIdNotIn?: Array<number>;
    priceGroupsIdGreaterThan?: number;
    priceGroupsIdLessThan?: number;
    priceGroupsIdGreaterThanOrEqual?: number;
    priceGroupsIdLessThanOrEqual?: number;
    priceGroupsIdEquals?: number;
    priceGroupsIdNotEquals?: number;
    priceGroupsIdSpecified?: boolean;
    priceGroupsIdIn?: Array<number>;
    priceGroupsIdNotIn?: Array<number>;
    formationIdGreaterThan?: number;
    formationIdLessThan?: number;
    formationIdGreaterThanOrEqual?: number;
    formationIdLessThanOrEqual?: number;
    formationIdEquals?: number;
    formationIdNotEquals?: number;
    formationIdSpecified?: boolean;
    formationIdIn?: Array<number>;
    formationIdNotIn?: Array<number>;
    seasonIdGreaterThan?: number;
    seasonIdLessThan?: number;
    seasonIdGreaterThanOrEqual?: number;
    seasonIdLessThanOrEqual?: number;
    seasonIdEquals?: number;
    seasonIdNotEquals?: number;
    seasonIdSpecified?: boolean;
    seasonIdIn?: Array<number>;
    seasonIdNotIn?: Array<number>;
    distinct?: boolean;
}

export interface CreateGranPrixRequest {
    granPrix: GranPrix;
}

export interface DeleteGranPrixRequest {
    id: number;
}

export interface GetAllGranPrixesRequest {
    idGreaterThan?: number;
    idLessThan?: number;
    idGreaterThanOrEqual?: number;
    idLessThanOrEqual?: number;
    idEquals?: number;
    idNotEquals?: number;
    idSpecified?: boolean;
    idIn?: Array<number>;
    idNotIn?: Array<number>;
    dateGreaterThan?: Date;
    dateLessThan?: Date;
    dateGreaterThanOrEqual?: Date;
    dateLessThanOrEqual?: Date;
    dateEquals?: Date;
    dateNotEquals?: Date;
    dateSpecified?: boolean;
    dateIn?: Array<Date>;
    dateNotIn?: Array<Date>;
    nameContains?: string;
    nameDoesNotContain?: string;
    nameEquals?: string;
    nameNotEquals?: string;
    nameSpecified?: boolean;
    nameIn?: Array<string>;
    nameNotIn?: Array<string>;
    winnerContains?: string;
    winnerDoesNotContain?: string;
    winnerEquals?: string;
    winnerNotEquals?: string;
    winnerSpecified?: boolean;
    winnerIn?: Array<string>;
    winnerNotIn?: Array<string>;
    winnerTeamContains?: string;
    winnerTeamDoesNotContain?: string;
    winnerTeamEquals?: string;
    winnerTeamNotEquals?: string;
    winnerTeamSpecified?: boolean;
    winnerTeamIn?: Array<string>;
    winnerTeamNotIn?: Array<string>;
    lapsGreaterThan?: number;
    lapsLessThan?: number;
    lapsGreaterThanOrEqual?: number;
    lapsLessThanOrEqual?: number;
    lapsEquals?: number;
    lapsNotEquals?: number;
    lapsSpecified?: boolean;
    lapsIn?: Array<number>;
    lapsNotIn?: Array<number>;
    timeGreaterThan?: Date;
    timeLessThan?: Date;
    timeGreaterThanOrEqual?: Date;
    timeLessThanOrEqual?: Date;
    timeEquals?: Date;
    timeNotEquals?: Date;
    timeSpecified?: boolean;
    timeIn?: Array<Date>;
    timeNotIn?: Array<Date>;
    circuitIdGreaterThan?: number;
    circuitIdLessThan?: number;
    circuitIdGreaterThanOrEqual?: number;
    circuitIdLessThanOrEqual?: number;
    circuitIdEquals?: number;
    circuitIdNotEquals?: number;
    circuitIdSpecified?: boolean;
    circuitIdIn?: Array<number>;
    circuitIdNotIn?: Array<number>;
    fastestLapsIdGreaterThan?: number;
    fastestLapsIdLessThan?: number;
    fastestLapsIdGreaterThanOrEqual?: number;
    fastestLapsIdLessThanOrEqual?: number;
    fastestLapsIdEquals?: number;
    fastestLapsIdNotEquals?: number;
    fastestLapsIdSpecified?: boolean;
    fastestLapsIdIn?: Array<number>;
    fastestLapsIdNotIn?: Array<number>;
    pitStopSummaryIdGreaterThan?: number;
    pitStopSummaryIdLessThan?: number;
    pitStopSummaryIdGreaterThanOrEqual?: number;
    pitStopSummaryIdLessThanOrEqual?: number;
    pitStopSummaryIdEquals?: number;
    pitStopSummaryIdNotEquals?: number;
    pitStopSummaryIdSpecified?: boolean;
    pitStopSummaryIdIn?: Array<number>;
    pitStopSummaryIdNotIn?: Array<number>;
    qualifyingIdGreaterThan?: number;
    qualifyingIdLessThan?: number;
    qualifyingIdGreaterThanOrEqual?: number;
    qualifyingIdLessThanOrEqual?: number;
    qualifyingIdEquals?: number;
    qualifyingIdNotEquals?: number;
    qualifyingIdSpecified?: boolean;
    qualifyingIdIn?: Array<number>;
    qualifyingIdNotIn?: Array<number>;
    raceResultIdGreaterThan?: number;
    raceResultIdLessThan?: number;
    raceResultIdGreaterThanOrEqual?: number;
    raceResultIdLessThanOrEqual?: number;
    raceResultIdEquals?: number;
    raceResultIdNotEquals?: number;
    raceResultIdSpecified?: boolean;
    raceResultIdIn?: Array<number>;
    raceResultIdNotIn?: Array<number>;
    startingGridIdGreaterThan?: number;
    startingGridIdLessThan?: number;
    startingGridIdGreaterThanOrEqual?: number;
    startingGridIdLessThanOrEqual?: number;
    startingGridIdEquals?: number;
    startingGridIdNotEquals?: number;
    startingGridIdSpecified?: boolean;
    startingGridIdIn?: Array<number>;
    startingGridIdNotIn?: Array<number>;
    practiceIdGreaterThan?: number;
    practiceIdLessThan?: number;
    practiceIdGreaterThanOrEqual?: number;
    practiceIdLessThanOrEqual?: number;
    practiceIdEquals?: number;
    practiceIdNotEquals?: number;
    practiceIdSpecified?: boolean;
    practiceIdIn?: Array<number>;
    practiceIdNotIn?: Array<number>;
    priceGroupsIdGreaterThan?: number;
    priceGroupsIdLessThan?: number;
    priceGroupsIdGreaterThanOrEqual?: number;
    priceGroupsIdLessThanOrEqual?: number;
    priceGroupsIdEquals?: number;
    priceGroupsIdNotEquals?: number;
    priceGroupsIdSpecified?: boolean;
    priceGroupsIdIn?: Array<number>;
    priceGroupsIdNotIn?: Array<number>;
    formationIdGreaterThan?: number;
    formationIdLessThan?: number;
    formationIdGreaterThanOrEqual?: number;
    formationIdLessThanOrEqual?: number;
    formationIdEquals?: number;
    formationIdNotEquals?: number;
    formationIdSpecified?: boolean;
    formationIdIn?: Array<number>;
    formationIdNotIn?: Array<number>;
    seasonIdGreaterThan?: number;
    seasonIdLessThan?: number;
    seasonIdGreaterThanOrEqual?: number;
    seasonIdLessThanOrEqual?: number;
    seasonIdEquals?: number;
    seasonIdNotEquals?: number;
    seasonIdSpecified?: boolean;
    seasonIdIn?: Array<number>;
    seasonIdNotIn?: Array<number>;
    distinct?: boolean;
}

export interface GetGranPrixRequest {
    id: number;
}

export interface PartialUpdateGranPrixRequest {
    id: number;
    granPrix: GranPrix;
}

export interface UpdateGranPrixRequest {
    id: number;
    granPrix: GranPrix;
}

/**
 * 
 */
export class GranPrixResourceApi extends runtime.BaseAPI {

    /**
     */
    async countGranPrixesRaw(requestParameters: CountGranPrixesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<number>> {
        const queryParameters: any = {};

        if (requestParameters.idGreaterThan !== undefined) {
            queryParameters['id.greaterThan'] = requestParameters.idGreaterThan;
        }

        if (requestParameters.idLessThan !== undefined) {
            queryParameters['id.lessThan'] = requestParameters.idLessThan;
        }

        if (requestParameters.idGreaterThanOrEqual !== undefined) {
            queryParameters['id.greaterThanOrEqual'] = requestParameters.idGreaterThanOrEqual;
        }

        if (requestParameters.idLessThanOrEqual !== undefined) {
            queryParameters['id.lessThanOrEqual'] = requestParameters.idLessThanOrEqual;
        }

        if (requestParameters.idEquals !== undefined) {
            queryParameters['id.equals'] = requestParameters.idEquals;
        }

        if (requestParameters.idNotEquals !== undefined) {
            queryParameters['id.notEquals'] = requestParameters.idNotEquals;
        }

        if (requestParameters.idSpecified !== undefined) {
            queryParameters['id.specified'] = requestParameters.idSpecified;
        }

        if (requestParameters.idIn) {
            queryParameters['id.in'] = requestParameters.idIn;
        }

        if (requestParameters.idNotIn) {
            queryParameters['id.notIn'] = requestParameters.idNotIn;
        }

        if (requestParameters.dateGreaterThan !== undefined) {
            queryParameters['date.greaterThan'] = (requestParameters.dateGreaterThan as any).toISOString();
        }

        if (requestParameters.dateLessThan !== undefined) {
            queryParameters['date.lessThan'] = (requestParameters.dateLessThan as any).toISOString();
        }

        if (requestParameters.dateGreaterThanOrEqual !== undefined) {
            queryParameters['date.greaterThanOrEqual'] = (requestParameters.dateGreaterThanOrEqual as any).toISOString();
        }

        if (requestParameters.dateLessThanOrEqual !== undefined) {
            queryParameters['date.lessThanOrEqual'] = (requestParameters.dateLessThanOrEqual as any).toISOString();
        }

        if (requestParameters.dateEquals !== undefined) {
            queryParameters['date.equals'] = (requestParameters.dateEquals as any).toISOString();
        }

        if (requestParameters.dateNotEquals !== undefined) {
            queryParameters['date.notEquals'] = (requestParameters.dateNotEquals as any).toISOString();
        }

        if (requestParameters.dateSpecified !== undefined) {
            queryParameters['date.specified'] = requestParameters.dateSpecified;
        }

        if (requestParameters.dateIn) {
            queryParameters['date.in'] = requestParameters.dateIn;
        }

        if (requestParameters.dateNotIn) {
            queryParameters['date.notIn'] = requestParameters.dateNotIn;
        }

        if (requestParameters.nameContains !== undefined) {
            queryParameters['name.contains'] = requestParameters.nameContains;
        }

        if (requestParameters.nameDoesNotContain !== undefined) {
            queryParameters['name.doesNotContain'] = requestParameters.nameDoesNotContain;
        }

        if (requestParameters.nameEquals !== undefined) {
            queryParameters['name.equals'] = requestParameters.nameEquals;
        }

        if (requestParameters.nameNotEquals !== undefined) {
            queryParameters['name.notEquals'] = requestParameters.nameNotEquals;
        }

        if (requestParameters.nameSpecified !== undefined) {
            queryParameters['name.specified'] = requestParameters.nameSpecified;
        }

        if (requestParameters.nameIn) {
            queryParameters['name.in'] = requestParameters.nameIn;
        }

        if (requestParameters.nameNotIn) {
            queryParameters['name.notIn'] = requestParameters.nameNotIn;
        }

        if (requestParameters.winnerContains !== undefined) {
            queryParameters['winner.contains'] = requestParameters.winnerContains;
        }

        if (requestParameters.winnerDoesNotContain !== undefined) {
            queryParameters['winner.doesNotContain'] = requestParameters.winnerDoesNotContain;
        }

        if (requestParameters.winnerEquals !== undefined) {
            queryParameters['winner.equals'] = requestParameters.winnerEquals;
        }

        if (requestParameters.winnerNotEquals !== undefined) {
            queryParameters['winner.notEquals'] = requestParameters.winnerNotEquals;
        }

        if (requestParameters.winnerSpecified !== undefined) {
            queryParameters['winner.specified'] = requestParameters.winnerSpecified;
        }

        if (requestParameters.winnerIn) {
            queryParameters['winner.in'] = requestParameters.winnerIn;
        }

        if (requestParameters.winnerNotIn) {
            queryParameters['winner.notIn'] = requestParameters.winnerNotIn;
        }

        if (requestParameters.winnerTeamContains !== undefined) {
            queryParameters['winnerTeam.contains'] = requestParameters.winnerTeamContains;
        }

        if (requestParameters.winnerTeamDoesNotContain !== undefined) {
            queryParameters['winnerTeam.doesNotContain'] = requestParameters.winnerTeamDoesNotContain;
        }

        if (requestParameters.winnerTeamEquals !== undefined) {
            queryParameters['winnerTeam.equals'] = requestParameters.winnerTeamEquals;
        }

        if (requestParameters.winnerTeamNotEquals !== undefined) {
            queryParameters['winnerTeam.notEquals'] = requestParameters.winnerTeamNotEquals;
        }

        if (requestParameters.winnerTeamSpecified !== undefined) {
            queryParameters['winnerTeam.specified'] = requestParameters.winnerTeamSpecified;
        }

        if (requestParameters.winnerTeamIn) {
            queryParameters['winnerTeam.in'] = requestParameters.winnerTeamIn;
        }

        if (requestParameters.winnerTeamNotIn) {
            queryParameters['winnerTeam.notIn'] = requestParameters.winnerTeamNotIn;
        }

        if (requestParameters.lapsGreaterThan !== undefined) {
            queryParameters['laps.greaterThan'] = requestParameters.lapsGreaterThan;
        }

        if (requestParameters.lapsLessThan !== undefined) {
            queryParameters['laps.lessThan'] = requestParameters.lapsLessThan;
        }

        if (requestParameters.lapsGreaterThanOrEqual !== undefined) {
            queryParameters['laps.greaterThanOrEqual'] = requestParameters.lapsGreaterThanOrEqual;
        }

        if (requestParameters.lapsLessThanOrEqual !== undefined) {
            queryParameters['laps.lessThanOrEqual'] = requestParameters.lapsLessThanOrEqual;
        }

        if (requestParameters.lapsEquals !== undefined) {
            queryParameters['laps.equals'] = requestParameters.lapsEquals;
        }

        if (requestParameters.lapsNotEquals !== undefined) {
            queryParameters['laps.notEquals'] = requestParameters.lapsNotEquals;
        }

        if (requestParameters.lapsSpecified !== undefined) {
            queryParameters['laps.specified'] = requestParameters.lapsSpecified;
        }

        if (requestParameters.lapsIn) {
            queryParameters['laps.in'] = requestParameters.lapsIn;
        }

        if (requestParameters.lapsNotIn) {
            queryParameters['laps.notIn'] = requestParameters.lapsNotIn;
        }

        if (requestParameters.timeGreaterThan !== undefined) {
            queryParameters['time.greaterThan'] = (requestParameters.timeGreaterThan as any).toISOString();
        }

        if (requestParameters.timeLessThan !== undefined) {
            queryParameters['time.lessThan'] = (requestParameters.timeLessThan as any).toISOString();
        }

        if (requestParameters.timeGreaterThanOrEqual !== undefined) {
            queryParameters['time.greaterThanOrEqual'] = (requestParameters.timeGreaterThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeLessThanOrEqual !== undefined) {
            queryParameters['time.lessThanOrEqual'] = (requestParameters.timeLessThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeEquals !== undefined) {
            queryParameters['time.equals'] = (requestParameters.timeEquals as any).toISOString();
        }

        if (requestParameters.timeNotEquals !== undefined) {
            queryParameters['time.notEquals'] = (requestParameters.timeNotEquals as any).toISOString();
        }

        if (requestParameters.timeSpecified !== undefined) {
            queryParameters['time.specified'] = requestParameters.timeSpecified;
        }

        if (requestParameters.timeIn) {
            queryParameters['time.in'] = requestParameters.timeIn;
        }

        if (requestParameters.timeNotIn) {
            queryParameters['time.notIn'] = requestParameters.timeNotIn;
        }

        if (requestParameters.circuitIdGreaterThan !== undefined) {
            queryParameters['circuitId.greaterThan'] = requestParameters.circuitIdGreaterThan;
        }

        if (requestParameters.circuitIdLessThan !== undefined) {
            queryParameters['circuitId.lessThan'] = requestParameters.circuitIdLessThan;
        }

        if (requestParameters.circuitIdGreaterThanOrEqual !== undefined) {
            queryParameters['circuitId.greaterThanOrEqual'] = requestParameters.circuitIdGreaterThanOrEqual;
        }

        if (requestParameters.circuitIdLessThanOrEqual !== undefined) {
            queryParameters['circuitId.lessThanOrEqual'] = requestParameters.circuitIdLessThanOrEqual;
        }

        if (requestParameters.circuitIdEquals !== undefined) {
            queryParameters['circuitId.equals'] = requestParameters.circuitIdEquals;
        }

        if (requestParameters.circuitIdNotEquals !== undefined) {
            queryParameters['circuitId.notEquals'] = requestParameters.circuitIdNotEquals;
        }

        if (requestParameters.circuitIdSpecified !== undefined) {
            queryParameters['circuitId.specified'] = requestParameters.circuitIdSpecified;
        }

        if (requestParameters.circuitIdIn) {
            queryParameters['circuitId.in'] = requestParameters.circuitIdIn;
        }

        if (requestParameters.circuitIdNotIn) {
            queryParameters['circuitId.notIn'] = requestParameters.circuitIdNotIn;
        }

        if (requestParameters.fastestLapsIdGreaterThan !== undefined) {
            queryParameters['fastestLapsId.greaterThan'] = requestParameters.fastestLapsIdGreaterThan;
        }

        if (requestParameters.fastestLapsIdLessThan !== undefined) {
            queryParameters['fastestLapsId.lessThan'] = requestParameters.fastestLapsIdLessThan;
        }

        if (requestParameters.fastestLapsIdGreaterThanOrEqual !== undefined) {
            queryParameters['fastestLapsId.greaterThanOrEqual'] = requestParameters.fastestLapsIdGreaterThanOrEqual;
        }

        if (requestParameters.fastestLapsIdLessThanOrEqual !== undefined) {
            queryParameters['fastestLapsId.lessThanOrEqual'] = requestParameters.fastestLapsIdLessThanOrEqual;
        }

        if (requestParameters.fastestLapsIdEquals !== undefined) {
            queryParameters['fastestLapsId.equals'] = requestParameters.fastestLapsIdEquals;
        }

        if (requestParameters.fastestLapsIdNotEquals !== undefined) {
            queryParameters['fastestLapsId.notEquals'] = requestParameters.fastestLapsIdNotEquals;
        }

        if (requestParameters.fastestLapsIdSpecified !== undefined) {
            queryParameters['fastestLapsId.specified'] = requestParameters.fastestLapsIdSpecified;
        }

        if (requestParameters.fastestLapsIdIn) {
            queryParameters['fastestLapsId.in'] = requestParameters.fastestLapsIdIn;
        }

        if (requestParameters.fastestLapsIdNotIn) {
            queryParameters['fastestLapsId.notIn'] = requestParameters.fastestLapsIdNotIn;
        }

        if (requestParameters.pitStopSummaryIdGreaterThan !== undefined) {
            queryParameters['pitStopSummaryId.greaterThan'] = requestParameters.pitStopSummaryIdGreaterThan;
        }

        if (requestParameters.pitStopSummaryIdLessThan !== undefined) {
            queryParameters['pitStopSummaryId.lessThan'] = requestParameters.pitStopSummaryIdLessThan;
        }

        if (requestParameters.pitStopSummaryIdGreaterThanOrEqual !== undefined) {
            queryParameters['pitStopSummaryId.greaterThanOrEqual'] = requestParameters.pitStopSummaryIdGreaterThanOrEqual;
        }

        if (requestParameters.pitStopSummaryIdLessThanOrEqual !== undefined) {
            queryParameters['pitStopSummaryId.lessThanOrEqual'] = requestParameters.pitStopSummaryIdLessThanOrEqual;
        }

        if (requestParameters.pitStopSummaryIdEquals !== undefined) {
            queryParameters['pitStopSummaryId.equals'] = requestParameters.pitStopSummaryIdEquals;
        }

        if (requestParameters.pitStopSummaryIdNotEquals !== undefined) {
            queryParameters['pitStopSummaryId.notEquals'] = requestParameters.pitStopSummaryIdNotEquals;
        }

        if (requestParameters.pitStopSummaryIdSpecified !== undefined) {
            queryParameters['pitStopSummaryId.specified'] = requestParameters.pitStopSummaryIdSpecified;
        }

        if (requestParameters.pitStopSummaryIdIn) {
            queryParameters['pitStopSummaryId.in'] = requestParameters.pitStopSummaryIdIn;
        }

        if (requestParameters.pitStopSummaryIdNotIn) {
            queryParameters['pitStopSummaryId.notIn'] = requestParameters.pitStopSummaryIdNotIn;
        }

        if (requestParameters.qualifyingIdGreaterThan !== undefined) {
            queryParameters['qualifyingId.greaterThan'] = requestParameters.qualifyingIdGreaterThan;
        }

        if (requestParameters.qualifyingIdLessThan !== undefined) {
            queryParameters['qualifyingId.lessThan'] = requestParameters.qualifyingIdLessThan;
        }

        if (requestParameters.qualifyingIdGreaterThanOrEqual !== undefined) {
            queryParameters['qualifyingId.greaterThanOrEqual'] = requestParameters.qualifyingIdGreaterThanOrEqual;
        }

        if (requestParameters.qualifyingIdLessThanOrEqual !== undefined) {
            queryParameters['qualifyingId.lessThanOrEqual'] = requestParameters.qualifyingIdLessThanOrEqual;
        }

        if (requestParameters.qualifyingIdEquals !== undefined) {
            queryParameters['qualifyingId.equals'] = requestParameters.qualifyingIdEquals;
        }

        if (requestParameters.qualifyingIdNotEquals !== undefined) {
            queryParameters['qualifyingId.notEquals'] = requestParameters.qualifyingIdNotEquals;
        }

        if (requestParameters.qualifyingIdSpecified !== undefined) {
            queryParameters['qualifyingId.specified'] = requestParameters.qualifyingIdSpecified;
        }

        if (requestParameters.qualifyingIdIn) {
            queryParameters['qualifyingId.in'] = requestParameters.qualifyingIdIn;
        }

        if (requestParameters.qualifyingIdNotIn) {
            queryParameters['qualifyingId.notIn'] = requestParameters.qualifyingIdNotIn;
        }

        if (requestParameters.raceResultIdGreaterThan !== undefined) {
            queryParameters['raceResultId.greaterThan'] = requestParameters.raceResultIdGreaterThan;
        }

        if (requestParameters.raceResultIdLessThan !== undefined) {
            queryParameters['raceResultId.lessThan'] = requestParameters.raceResultIdLessThan;
        }

        if (requestParameters.raceResultIdGreaterThanOrEqual !== undefined) {
            queryParameters['raceResultId.greaterThanOrEqual'] = requestParameters.raceResultIdGreaterThanOrEqual;
        }

        if (requestParameters.raceResultIdLessThanOrEqual !== undefined) {
            queryParameters['raceResultId.lessThanOrEqual'] = requestParameters.raceResultIdLessThanOrEqual;
        }

        if (requestParameters.raceResultIdEquals !== undefined) {
            queryParameters['raceResultId.equals'] = requestParameters.raceResultIdEquals;
        }

        if (requestParameters.raceResultIdNotEquals !== undefined) {
            queryParameters['raceResultId.notEquals'] = requestParameters.raceResultIdNotEquals;
        }

        if (requestParameters.raceResultIdSpecified !== undefined) {
            queryParameters['raceResultId.specified'] = requestParameters.raceResultIdSpecified;
        }

        if (requestParameters.raceResultIdIn) {
            queryParameters['raceResultId.in'] = requestParameters.raceResultIdIn;
        }

        if (requestParameters.raceResultIdNotIn) {
            queryParameters['raceResultId.notIn'] = requestParameters.raceResultIdNotIn;
        }

        if (requestParameters.startingGridIdGreaterThan !== undefined) {
            queryParameters['startingGridId.greaterThan'] = requestParameters.startingGridIdGreaterThan;
        }

        if (requestParameters.startingGridIdLessThan !== undefined) {
            queryParameters['startingGridId.lessThan'] = requestParameters.startingGridIdLessThan;
        }

        if (requestParameters.startingGridIdGreaterThanOrEqual !== undefined) {
            queryParameters['startingGridId.greaterThanOrEqual'] = requestParameters.startingGridIdGreaterThanOrEqual;
        }

        if (requestParameters.startingGridIdLessThanOrEqual !== undefined) {
            queryParameters['startingGridId.lessThanOrEqual'] = requestParameters.startingGridIdLessThanOrEqual;
        }

        if (requestParameters.startingGridIdEquals !== undefined) {
            queryParameters['startingGridId.equals'] = requestParameters.startingGridIdEquals;
        }

        if (requestParameters.startingGridIdNotEquals !== undefined) {
            queryParameters['startingGridId.notEquals'] = requestParameters.startingGridIdNotEquals;
        }

        if (requestParameters.startingGridIdSpecified !== undefined) {
            queryParameters['startingGridId.specified'] = requestParameters.startingGridIdSpecified;
        }

        if (requestParameters.startingGridIdIn) {
            queryParameters['startingGridId.in'] = requestParameters.startingGridIdIn;
        }

        if (requestParameters.startingGridIdNotIn) {
            queryParameters['startingGridId.notIn'] = requestParameters.startingGridIdNotIn;
        }

        if (requestParameters.practiceIdGreaterThan !== undefined) {
            queryParameters['practiceId.greaterThan'] = requestParameters.practiceIdGreaterThan;
        }

        if (requestParameters.practiceIdLessThan !== undefined) {
            queryParameters['practiceId.lessThan'] = requestParameters.practiceIdLessThan;
        }

        if (requestParameters.practiceIdGreaterThanOrEqual !== undefined) {
            queryParameters['practiceId.greaterThanOrEqual'] = requestParameters.practiceIdGreaterThanOrEqual;
        }

        if (requestParameters.practiceIdLessThanOrEqual !== undefined) {
            queryParameters['practiceId.lessThanOrEqual'] = requestParameters.practiceIdLessThanOrEqual;
        }

        if (requestParameters.practiceIdEquals !== undefined) {
            queryParameters['practiceId.equals'] = requestParameters.practiceIdEquals;
        }

        if (requestParameters.practiceIdNotEquals !== undefined) {
            queryParameters['practiceId.notEquals'] = requestParameters.practiceIdNotEquals;
        }

        if (requestParameters.practiceIdSpecified !== undefined) {
            queryParameters['practiceId.specified'] = requestParameters.practiceIdSpecified;
        }

        if (requestParameters.practiceIdIn) {
            queryParameters['practiceId.in'] = requestParameters.practiceIdIn;
        }

        if (requestParameters.practiceIdNotIn) {
            queryParameters['practiceId.notIn'] = requestParameters.practiceIdNotIn;
        }

        if (requestParameters.priceGroupsIdGreaterThan !== undefined) {
            queryParameters['priceGroupsId.greaterThan'] = requestParameters.priceGroupsIdGreaterThan;
        }

        if (requestParameters.priceGroupsIdLessThan !== undefined) {
            queryParameters['priceGroupsId.lessThan'] = requestParameters.priceGroupsIdLessThan;
        }

        if (requestParameters.priceGroupsIdGreaterThanOrEqual !== undefined) {
            queryParameters['priceGroupsId.greaterThanOrEqual'] = requestParameters.priceGroupsIdGreaterThanOrEqual;
        }

        if (requestParameters.priceGroupsIdLessThanOrEqual !== undefined) {
            queryParameters['priceGroupsId.lessThanOrEqual'] = requestParameters.priceGroupsIdLessThanOrEqual;
        }

        if (requestParameters.priceGroupsIdEquals !== undefined) {
            queryParameters['priceGroupsId.equals'] = requestParameters.priceGroupsIdEquals;
        }

        if (requestParameters.priceGroupsIdNotEquals !== undefined) {
            queryParameters['priceGroupsId.notEquals'] = requestParameters.priceGroupsIdNotEquals;
        }

        if (requestParameters.priceGroupsIdSpecified !== undefined) {
            queryParameters['priceGroupsId.specified'] = requestParameters.priceGroupsIdSpecified;
        }

        if (requestParameters.priceGroupsIdIn) {
            queryParameters['priceGroupsId.in'] = requestParameters.priceGroupsIdIn;
        }

        if (requestParameters.priceGroupsIdNotIn) {
            queryParameters['priceGroupsId.notIn'] = requestParameters.priceGroupsIdNotIn;
        }

        if (requestParameters.formationIdGreaterThan !== undefined) {
            queryParameters['formationId.greaterThan'] = requestParameters.formationIdGreaterThan;
        }

        if (requestParameters.formationIdLessThan !== undefined) {
            queryParameters['formationId.lessThan'] = requestParameters.formationIdLessThan;
        }

        if (requestParameters.formationIdGreaterThanOrEqual !== undefined) {
            queryParameters['formationId.greaterThanOrEqual'] = requestParameters.formationIdGreaterThanOrEqual;
        }

        if (requestParameters.formationIdLessThanOrEqual !== undefined) {
            queryParameters['formationId.lessThanOrEqual'] = requestParameters.formationIdLessThanOrEqual;
        }

        if (requestParameters.formationIdEquals !== undefined) {
            queryParameters['formationId.equals'] = requestParameters.formationIdEquals;
        }

        if (requestParameters.formationIdNotEquals !== undefined) {
            queryParameters['formationId.notEquals'] = requestParameters.formationIdNotEquals;
        }

        if (requestParameters.formationIdSpecified !== undefined) {
            queryParameters['formationId.specified'] = requestParameters.formationIdSpecified;
        }

        if (requestParameters.formationIdIn) {
            queryParameters['formationId.in'] = requestParameters.formationIdIn;
        }

        if (requestParameters.formationIdNotIn) {
            queryParameters['formationId.notIn'] = requestParameters.formationIdNotIn;
        }

        if (requestParameters.seasonIdGreaterThan !== undefined) {
            queryParameters['seasonId.greaterThan'] = requestParameters.seasonIdGreaterThan;
        }

        if (requestParameters.seasonIdLessThan !== undefined) {
            queryParameters['seasonId.lessThan'] = requestParameters.seasonIdLessThan;
        }

        if (requestParameters.seasonIdGreaterThanOrEqual !== undefined) {
            queryParameters['seasonId.greaterThanOrEqual'] = requestParameters.seasonIdGreaterThanOrEqual;
        }

        if (requestParameters.seasonIdLessThanOrEqual !== undefined) {
            queryParameters['seasonId.lessThanOrEqual'] = requestParameters.seasonIdLessThanOrEqual;
        }

        if (requestParameters.seasonIdEquals !== undefined) {
            queryParameters['seasonId.equals'] = requestParameters.seasonIdEquals;
        }

        if (requestParameters.seasonIdNotEquals !== undefined) {
            queryParameters['seasonId.notEquals'] = requestParameters.seasonIdNotEquals;
        }

        if (requestParameters.seasonIdSpecified !== undefined) {
            queryParameters['seasonId.specified'] = requestParameters.seasonIdSpecified;
        }

        if (requestParameters.seasonIdIn) {
            queryParameters['seasonId.in'] = requestParameters.seasonIdIn;
        }

        if (requestParameters.seasonIdNotIn) {
            queryParameters['seasonId.notIn'] = requestParameters.seasonIdNotIn;
        }

        if (requestParameters.distinct !== undefined) {
            queryParameters['distinct'] = requestParameters.distinct;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/gran-prixes/count`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async countGranPrixes(requestParameters: CountGranPrixesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<number> {
        const response = await this.countGranPrixesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async createGranPrixRaw(requestParameters: CreateGranPrixRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GranPrix>> {
        if (requestParameters.granPrix === null || requestParameters.granPrix === undefined) {
            throw new runtime.RequiredError('granPrix','Required parameter requestParameters.granPrix was null or undefined when calling createGranPrix.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/gran-prixes`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GranPrixToJSON(requestParameters.granPrix),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GranPrixFromJSON(jsonValue));
    }

    /**
     */
    async createGranPrix(requestParameters: CreateGranPrixRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GranPrix> {
        const response = await this.createGranPrixRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async deleteGranPrixRaw(requestParameters: DeleteGranPrixRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteGranPrix.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/gran-prixes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async deleteGranPrix(requestParameters: DeleteGranPrixRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteGranPrixRaw(requestParameters, initOverrides);
    }

    /**
     */
    async getAllGranPrixesRaw(requestParameters: GetAllGranPrixesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GranPrix>>> {
        const queryParameters: any = {};

        if (requestParameters.idGreaterThan !== undefined) {
            queryParameters['id.greaterThan'] = requestParameters.idGreaterThan;
        }

        if (requestParameters.idLessThan !== undefined) {
            queryParameters['id.lessThan'] = requestParameters.idLessThan;
        }

        if (requestParameters.idGreaterThanOrEqual !== undefined) {
            queryParameters['id.greaterThanOrEqual'] = requestParameters.idGreaterThanOrEqual;
        }

        if (requestParameters.idLessThanOrEqual !== undefined) {
            queryParameters['id.lessThanOrEqual'] = requestParameters.idLessThanOrEqual;
        }

        if (requestParameters.idEquals !== undefined) {
            queryParameters['id.equals'] = requestParameters.idEquals;
        }

        if (requestParameters.idNotEquals !== undefined) {
            queryParameters['id.notEquals'] = requestParameters.idNotEquals;
        }

        if (requestParameters.idSpecified !== undefined) {
            queryParameters['id.specified'] = requestParameters.idSpecified;
        }

        if (requestParameters.idIn) {
            queryParameters['id.in'] = requestParameters.idIn;
        }

        if (requestParameters.idNotIn) {
            queryParameters['id.notIn'] = requestParameters.idNotIn;
        }

        if (requestParameters.dateGreaterThan !== undefined) {
            queryParameters['date.greaterThan'] = (requestParameters.dateGreaterThan as any).toISOString();
        }

        if (requestParameters.dateLessThan !== undefined) {
            queryParameters['date.lessThan'] = (requestParameters.dateLessThan as any).toISOString();
        }

        if (requestParameters.dateGreaterThanOrEqual !== undefined) {
            queryParameters['date.greaterThanOrEqual'] = (requestParameters.dateGreaterThanOrEqual as any).toISOString();
        }

        if (requestParameters.dateLessThanOrEqual !== undefined) {
            queryParameters['date.lessThanOrEqual'] = (requestParameters.dateLessThanOrEqual as any).toISOString();
        }

        if (requestParameters.dateEquals !== undefined) {
            queryParameters['date.equals'] = (requestParameters.dateEquals as any).toISOString();
        }

        if (requestParameters.dateNotEquals !== undefined) {
            queryParameters['date.notEquals'] = (requestParameters.dateNotEquals as any).toISOString();
        }

        if (requestParameters.dateSpecified !== undefined) {
            queryParameters['date.specified'] = requestParameters.dateSpecified;
        }

        if (requestParameters.dateIn) {
            queryParameters['date.in'] = requestParameters.dateIn;
        }

        if (requestParameters.dateNotIn) {
            queryParameters['date.notIn'] = requestParameters.dateNotIn;
        }

        if (requestParameters.nameContains !== undefined) {
            queryParameters['name.contains'] = requestParameters.nameContains;
        }

        if (requestParameters.nameDoesNotContain !== undefined) {
            queryParameters['name.doesNotContain'] = requestParameters.nameDoesNotContain;
        }

        if (requestParameters.nameEquals !== undefined) {
            queryParameters['name.equals'] = requestParameters.nameEquals;
        }

        if (requestParameters.nameNotEquals !== undefined) {
            queryParameters['name.notEquals'] = requestParameters.nameNotEquals;
        }

        if (requestParameters.nameSpecified !== undefined) {
            queryParameters['name.specified'] = requestParameters.nameSpecified;
        }

        if (requestParameters.nameIn) {
            queryParameters['name.in'] = requestParameters.nameIn;
        }

        if (requestParameters.nameNotIn) {
            queryParameters['name.notIn'] = requestParameters.nameNotIn;
        }

        if (requestParameters.winnerContains !== undefined) {
            queryParameters['winner.contains'] = requestParameters.winnerContains;
        }

        if (requestParameters.winnerDoesNotContain !== undefined) {
            queryParameters['winner.doesNotContain'] = requestParameters.winnerDoesNotContain;
        }

        if (requestParameters.winnerEquals !== undefined) {
            queryParameters['winner.equals'] = requestParameters.winnerEquals;
        }

        if (requestParameters.winnerNotEquals !== undefined) {
            queryParameters['winner.notEquals'] = requestParameters.winnerNotEquals;
        }

        if (requestParameters.winnerSpecified !== undefined) {
            queryParameters['winner.specified'] = requestParameters.winnerSpecified;
        }

        if (requestParameters.winnerIn) {
            queryParameters['winner.in'] = requestParameters.winnerIn;
        }

        if (requestParameters.winnerNotIn) {
            queryParameters['winner.notIn'] = requestParameters.winnerNotIn;
        }

        if (requestParameters.winnerTeamContains !== undefined) {
            queryParameters['winnerTeam.contains'] = requestParameters.winnerTeamContains;
        }

        if (requestParameters.winnerTeamDoesNotContain !== undefined) {
            queryParameters['winnerTeam.doesNotContain'] = requestParameters.winnerTeamDoesNotContain;
        }

        if (requestParameters.winnerTeamEquals !== undefined) {
            queryParameters['winnerTeam.equals'] = requestParameters.winnerTeamEquals;
        }

        if (requestParameters.winnerTeamNotEquals !== undefined) {
            queryParameters['winnerTeam.notEquals'] = requestParameters.winnerTeamNotEquals;
        }

        if (requestParameters.winnerTeamSpecified !== undefined) {
            queryParameters['winnerTeam.specified'] = requestParameters.winnerTeamSpecified;
        }

        if (requestParameters.winnerTeamIn) {
            queryParameters['winnerTeam.in'] = requestParameters.winnerTeamIn;
        }

        if (requestParameters.winnerTeamNotIn) {
            queryParameters['winnerTeam.notIn'] = requestParameters.winnerTeamNotIn;
        }

        if (requestParameters.lapsGreaterThan !== undefined) {
            queryParameters['laps.greaterThan'] = requestParameters.lapsGreaterThan;
        }

        if (requestParameters.lapsLessThan !== undefined) {
            queryParameters['laps.lessThan'] = requestParameters.lapsLessThan;
        }

        if (requestParameters.lapsGreaterThanOrEqual !== undefined) {
            queryParameters['laps.greaterThanOrEqual'] = requestParameters.lapsGreaterThanOrEqual;
        }

        if (requestParameters.lapsLessThanOrEqual !== undefined) {
            queryParameters['laps.lessThanOrEqual'] = requestParameters.lapsLessThanOrEqual;
        }

        if (requestParameters.lapsEquals !== undefined) {
            queryParameters['laps.equals'] = requestParameters.lapsEquals;
        }

        if (requestParameters.lapsNotEquals !== undefined) {
            queryParameters['laps.notEquals'] = requestParameters.lapsNotEquals;
        }

        if (requestParameters.lapsSpecified !== undefined) {
            queryParameters['laps.specified'] = requestParameters.lapsSpecified;
        }

        if (requestParameters.lapsIn) {
            queryParameters['laps.in'] = requestParameters.lapsIn;
        }

        if (requestParameters.lapsNotIn) {
            queryParameters['laps.notIn'] = requestParameters.lapsNotIn;
        }

        if (requestParameters.timeGreaterThan !== undefined) {
            queryParameters['time.greaterThan'] = (requestParameters.timeGreaterThan as any).toISOString();
        }

        if (requestParameters.timeLessThan !== undefined) {
            queryParameters['time.lessThan'] = (requestParameters.timeLessThan as any).toISOString();
        }

        if (requestParameters.timeGreaterThanOrEqual !== undefined) {
            queryParameters['time.greaterThanOrEqual'] = (requestParameters.timeGreaterThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeLessThanOrEqual !== undefined) {
            queryParameters['time.lessThanOrEqual'] = (requestParameters.timeLessThanOrEqual as any).toISOString();
        }

        if (requestParameters.timeEquals !== undefined) {
            queryParameters['time.equals'] = (requestParameters.timeEquals as any).toISOString();
        }

        if (requestParameters.timeNotEquals !== undefined) {
            queryParameters['time.notEquals'] = (requestParameters.timeNotEquals as any).toISOString();
        }

        if (requestParameters.timeSpecified !== undefined) {
            queryParameters['time.specified'] = requestParameters.timeSpecified;
        }

        if (requestParameters.timeIn) {
            queryParameters['time.in'] = requestParameters.timeIn;
        }

        if (requestParameters.timeNotIn) {
            queryParameters['time.notIn'] = requestParameters.timeNotIn;
        }

        if (requestParameters.circuitIdGreaterThan !== undefined) {
            queryParameters['circuitId.greaterThan'] = requestParameters.circuitIdGreaterThan;
        }

        if (requestParameters.circuitIdLessThan !== undefined) {
            queryParameters['circuitId.lessThan'] = requestParameters.circuitIdLessThan;
        }

        if (requestParameters.circuitIdGreaterThanOrEqual !== undefined) {
            queryParameters['circuitId.greaterThanOrEqual'] = requestParameters.circuitIdGreaterThanOrEqual;
        }

        if (requestParameters.circuitIdLessThanOrEqual !== undefined) {
            queryParameters['circuitId.lessThanOrEqual'] = requestParameters.circuitIdLessThanOrEqual;
        }

        if (requestParameters.circuitIdEquals !== undefined) {
            queryParameters['circuitId.equals'] = requestParameters.circuitIdEquals;
        }

        if (requestParameters.circuitIdNotEquals !== undefined) {
            queryParameters['circuitId.notEquals'] = requestParameters.circuitIdNotEquals;
        }

        if (requestParameters.circuitIdSpecified !== undefined) {
            queryParameters['circuitId.specified'] = requestParameters.circuitIdSpecified;
        }

        if (requestParameters.circuitIdIn) {
            queryParameters['circuitId.in'] = requestParameters.circuitIdIn;
        }

        if (requestParameters.circuitIdNotIn) {
            queryParameters['circuitId.notIn'] = requestParameters.circuitIdNotIn;
        }

        if (requestParameters.fastestLapsIdGreaterThan !== undefined) {
            queryParameters['fastestLapsId.greaterThan'] = requestParameters.fastestLapsIdGreaterThan;
        }

        if (requestParameters.fastestLapsIdLessThan !== undefined) {
            queryParameters['fastestLapsId.lessThan'] = requestParameters.fastestLapsIdLessThan;
        }

        if (requestParameters.fastestLapsIdGreaterThanOrEqual !== undefined) {
            queryParameters['fastestLapsId.greaterThanOrEqual'] = requestParameters.fastestLapsIdGreaterThanOrEqual;
        }

        if (requestParameters.fastestLapsIdLessThanOrEqual !== undefined) {
            queryParameters['fastestLapsId.lessThanOrEqual'] = requestParameters.fastestLapsIdLessThanOrEqual;
        }

        if (requestParameters.fastestLapsIdEquals !== undefined) {
            queryParameters['fastestLapsId.equals'] = requestParameters.fastestLapsIdEquals;
        }

        if (requestParameters.fastestLapsIdNotEquals !== undefined) {
            queryParameters['fastestLapsId.notEquals'] = requestParameters.fastestLapsIdNotEquals;
        }

        if (requestParameters.fastestLapsIdSpecified !== undefined) {
            queryParameters['fastestLapsId.specified'] = requestParameters.fastestLapsIdSpecified;
        }

        if (requestParameters.fastestLapsIdIn) {
            queryParameters['fastestLapsId.in'] = requestParameters.fastestLapsIdIn;
        }

        if (requestParameters.fastestLapsIdNotIn) {
            queryParameters['fastestLapsId.notIn'] = requestParameters.fastestLapsIdNotIn;
        }

        if (requestParameters.pitStopSummaryIdGreaterThan !== undefined) {
            queryParameters['pitStopSummaryId.greaterThan'] = requestParameters.pitStopSummaryIdGreaterThan;
        }

        if (requestParameters.pitStopSummaryIdLessThan !== undefined) {
            queryParameters['pitStopSummaryId.lessThan'] = requestParameters.pitStopSummaryIdLessThan;
        }

        if (requestParameters.pitStopSummaryIdGreaterThanOrEqual !== undefined) {
            queryParameters['pitStopSummaryId.greaterThanOrEqual'] = requestParameters.pitStopSummaryIdGreaterThanOrEqual;
        }

        if (requestParameters.pitStopSummaryIdLessThanOrEqual !== undefined) {
            queryParameters['pitStopSummaryId.lessThanOrEqual'] = requestParameters.pitStopSummaryIdLessThanOrEqual;
        }

        if (requestParameters.pitStopSummaryIdEquals !== undefined) {
            queryParameters['pitStopSummaryId.equals'] = requestParameters.pitStopSummaryIdEquals;
        }

        if (requestParameters.pitStopSummaryIdNotEquals !== undefined) {
            queryParameters['pitStopSummaryId.notEquals'] = requestParameters.pitStopSummaryIdNotEquals;
        }

        if (requestParameters.pitStopSummaryIdSpecified !== undefined) {
            queryParameters['pitStopSummaryId.specified'] = requestParameters.pitStopSummaryIdSpecified;
        }

        if (requestParameters.pitStopSummaryIdIn) {
            queryParameters['pitStopSummaryId.in'] = requestParameters.pitStopSummaryIdIn;
        }

        if (requestParameters.pitStopSummaryIdNotIn) {
            queryParameters['pitStopSummaryId.notIn'] = requestParameters.pitStopSummaryIdNotIn;
        }

        if (requestParameters.qualifyingIdGreaterThan !== undefined) {
            queryParameters['qualifyingId.greaterThan'] = requestParameters.qualifyingIdGreaterThan;
        }

        if (requestParameters.qualifyingIdLessThan !== undefined) {
            queryParameters['qualifyingId.lessThan'] = requestParameters.qualifyingIdLessThan;
        }

        if (requestParameters.qualifyingIdGreaterThanOrEqual !== undefined) {
            queryParameters['qualifyingId.greaterThanOrEqual'] = requestParameters.qualifyingIdGreaterThanOrEqual;
        }

        if (requestParameters.qualifyingIdLessThanOrEqual !== undefined) {
            queryParameters['qualifyingId.lessThanOrEqual'] = requestParameters.qualifyingIdLessThanOrEqual;
        }

        if (requestParameters.qualifyingIdEquals !== undefined) {
            queryParameters['qualifyingId.equals'] = requestParameters.qualifyingIdEquals;
        }

        if (requestParameters.qualifyingIdNotEquals !== undefined) {
            queryParameters['qualifyingId.notEquals'] = requestParameters.qualifyingIdNotEquals;
        }

        if (requestParameters.qualifyingIdSpecified !== undefined) {
            queryParameters['qualifyingId.specified'] = requestParameters.qualifyingIdSpecified;
        }

        if (requestParameters.qualifyingIdIn) {
            queryParameters['qualifyingId.in'] = requestParameters.qualifyingIdIn;
        }

        if (requestParameters.qualifyingIdNotIn) {
            queryParameters['qualifyingId.notIn'] = requestParameters.qualifyingIdNotIn;
        }

        if (requestParameters.raceResultIdGreaterThan !== undefined) {
            queryParameters['raceResultId.greaterThan'] = requestParameters.raceResultIdGreaterThan;
        }

        if (requestParameters.raceResultIdLessThan !== undefined) {
            queryParameters['raceResultId.lessThan'] = requestParameters.raceResultIdLessThan;
        }

        if (requestParameters.raceResultIdGreaterThanOrEqual !== undefined) {
            queryParameters['raceResultId.greaterThanOrEqual'] = requestParameters.raceResultIdGreaterThanOrEqual;
        }

        if (requestParameters.raceResultIdLessThanOrEqual !== undefined) {
            queryParameters['raceResultId.lessThanOrEqual'] = requestParameters.raceResultIdLessThanOrEqual;
        }

        if (requestParameters.raceResultIdEquals !== undefined) {
            queryParameters['raceResultId.equals'] = requestParameters.raceResultIdEquals;
        }

        if (requestParameters.raceResultIdNotEquals !== undefined) {
            queryParameters['raceResultId.notEquals'] = requestParameters.raceResultIdNotEquals;
        }

        if (requestParameters.raceResultIdSpecified !== undefined) {
            queryParameters['raceResultId.specified'] = requestParameters.raceResultIdSpecified;
        }

        if (requestParameters.raceResultIdIn) {
            queryParameters['raceResultId.in'] = requestParameters.raceResultIdIn;
        }

        if (requestParameters.raceResultIdNotIn) {
            queryParameters['raceResultId.notIn'] = requestParameters.raceResultIdNotIn;
        }

        if (requestParameters.startingGridIdGreaterThan !== undefined) {
            queryParameters['startingGridId.greaterThan'] = requestParameters.startingGridIdGreaterThan;
        }

        if (requestParameters.startingGridIdLessThan !== undefined) {
            queryParameters['startingGridId.lessThan'] = requestParameters.startingGridIdLessThan;
        }

        if (requestParameters.startingGridIdGreaterThanOrEqual !== undefined) {
            queryParameters['startingGridId.greaterThanOrEqual'] = requestParameters.startingGridIdGreaterThanOrEqual;
        }

        if (requestParameters.startingGridIdLessThanOrEqual !== undefined) {
            queryParameters['startingGridId.lessThanOrEqual'] = requestParameters.startingGridIdLessThanOrEqual;
        }

        if (requestParameters.startingGridIdEquals !== undefined) {
            queryParameters['startingGridId.equals'] = requestParameters.startingGridIdEquals;
        }

        if (requestParameters.startingGridIdNotEquals !== undefined) {
            queryParameters['startingGridId.notEquals'] = requestParameters.startingGridIdNotEquals;
        }

        if (requestParameters.startingGridIdSpecified !== undefined) {
            queryParameters['startingGridId.specified'] = requestParameters.startingGridIdSpecified;
        }

        if (requestParameters.startingGridIdIn) {
            queryParameters['startingGridId.in'] = requestParameters.startingGridIdIn;
        }

        if (requestParameters.startingGridIdNotIn) {
            queryParameters['startingGridId.notIn'] = requestParameters.startingGridIdNotIn;
        }

        if (requestParameters.practiceIdGreaterThan !== undefined) {
            queryParameters['practiceId.greaterThan'] = requestParameters.practiceIdGreaterThan;
        }

        if (requestParameters.practiceIdLessThan !== undefined) {
            queryParameters['practiceId.lessThan'] = requestParameters.practiceIdLessThan;
        }

        if (requestParameters.practiceIdGreaterThanOrEqual !== undefined) {
            queryParameters['practiceId.greaterThanOrEqual'] = requestParameters.practiceIdGreaterThanOrEqual;
        }

        if (requestParameters.practiceIdLessThanOrEqual !== undefined) {
            queryParameters['practiceId.lessThanOrEqual'] = requestParameters.practiceIdLessThanOrEqual;
        }

        if (requestParameters.practiceIdEquals !== undefined) {
            queryParameters['practiceId.equals'] = requestParameters.practiceIdEquals;
        }

        if (requestParameters.practiceIdNotEquals !== undefined) {
            queryParameters['practiceId.notEquals'] = requestParameters.practiceIdNotEquals;
        }

        if (requestParameters.practiceIdSpecified !== undefined) {
            queryParameters['practiceId.specified'] = requestParameters.practiceIdSpecified;
        }

        if (requestParameters.practiceIdIn) {
            queryParameters['practiceId.in'] = requestParameters.practiceIdIn;
        }

        if (requestParameters.practiceIdNotIn) {
            queryParameters['practiceId.notIn'] = requestParameters.practiceIdNotIn;
        }

        if (requestParameters.priceGroupsIdGreaterThan !== undefined) {
            queryParameters['priceGroupsId.greaterThan'] = requestParameters.priceGroupsIdGreaterThan;
        }

        if (requestParameters.priceGroupsIdLessThan !== undefined) {
            queryParameters['priceGroupsId.lessThan'] = requestParameters.priceGroupsIdLessThan;
        }

        if (requestParameters.priceGroupsIdGreaterThanOrEqual !== undefined) {
            queryParameters['priceGroupsId.greaterThanOrEqual'] = requestParameters.priceGroupsIdGreaterThanOrEqual;
        }

        if (requestParameters.priceGroupsIdLessThanOrEqual !== undefined) {
            queryParameters['priceGroupsId.lessThanOrEqual'] = requestParameters.priceGroupsIdLessThanOrEqual;
        }

        if (requestParameters.priceGroupsIdEquals !== undefined) {
            queryParameters['priceGroupsId.equals'] = requestParameters.priceGroupsIdEquals;
        }

        if (requestParameters.priceGroupsIdNotEquals !== undefined) {
            queryParameters['priceGroupsId.notEquals'] = requestParameters.priceGroupsIdNotEquals;
        }

        if (requestParameters.priceGroupsIdSpecified !== undefined) {
            queryParameters['priceGroupsId.specified'] = requestParameters.priceGroupsIdSpecified;
        }

        if (requestParameters.priceGroupsIdIn) {
            queryParameters['priceGroupsId.in'] = requestParameters.priceGroupsIdIn;
        }

        if (requestParameters.priceGroupsIdNotIn) {
            queryParameters['priceGroupsId.notIn'] = requestParameters.priceGroupsIdNotIn;
        }

        if (requestParameters.formationIdGreaterThan !== undefined) {
            queryParameters['formationId.greaterThan'] = requestParameters.formationIdGreaterThan;
        }

        if (requestParameters.formationIdLessThan !== undefined) {
            queryParameters['formationId.lessThan'] = requestParameters.formationIdLessThan;
        }

        if (requestParameters.formationIdGreaterThanOrEqual !== undefined) {
            queryParameters['formationId.greaterThanOrEqual'] = requestParameters.formationIdGreaterThanOrEqual;
        }

        if (requestParameters.formationIdLessThanOrEqual !== undefined) {
            queryParameters['formationId.lessThanOrEqual'] = requestParameters.formationIdLessThanOrEqual;
        }

        if (requestParameters.formationIdEquals !== undefined) {
            queryParameters['formationId.equals'] = requestParameters.formationIdEquals;
        }

        if (requestParameters.formationIdNotEquals !== undefined) {
            queryParameters['formationId.notEquals'] = requestParameters.formationIdNotEquals;
        }

        if (requestParameters.formationIdSpecified !== undefined) {
            queryParameters['formationId.specified'] = requestParameters.formationIdSpecified;
        }

        if (requestParameters.formationIdIn) {
            queryParameters['formationId.in'] = requestParameters.formationIdIn;
        }

        if (requestParameters.formationIdNotIn) {
            queryParameters['formationId.notIn'] = requestParameters.formationIdNotIn;
        }

        if (requestParameters.seasonIdGreaterThan !== undefined) {
            queryParameters['seasonId.greaterThan'] = requestParameters.seasonIdGreaterThan;
        }

        if (requestParameters.seasonIdLessThan !== undefined) {
            queryParameters['seasonId.lessThan'] = requestParameters.seasonIdLessThan;
        }

        if (requestParameters.seasonIdGreaterThanOrEqual !== undefined) {
            queryParameters['seasonId.greaterThanOrEqual'] = requestParameters.seasonIdGreaterThanOrEqual;
        }

        if (requestParameters.seasonIdLessThanOrEqual !== undefined) {
            queryParameters['seasonId.lessThanOrEqual'] = requestParameters.seasonIdLessThanOrEqual;
        }

        if (requestParameters.seasonIdEquals !== undefined) {
            queryParameters['seasonId.equals'] = requestParameters.seasonIdEquals;
        }

        if (requestParameters.seasonIdNotEquals !== undefined) {
            queryParameters['seasonId.notEquals'] = requestParameters.seasonIdNotEquals;
        }

        if (requestParameters.seasonIdSpecified !== undefined) {
            queryParameters['seasonId.specified'] = requestParameters.seasonIdSpecified;
        }

        if (requestParameters.seasonIdIn) {
            queryParameters['seasonId.in'] = requestParameters.seasonIdIn;
        }

        if (requestParameters.seasonIdNotIn) {
            queryParameters['seasonId.notIn'] = requestParameters.seasonIdNotIn;
        }

        if (requestParameters.distinct !== undefined) {
            queryParameters['distinct'] = requestParameters.distinct;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/gran-prixes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GranPrixFromJSON));
    }

    /**
     */
    async getAllGranPrixes(requestParameters: GetAllGranPrixesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GranPrix>> {
        const response = await this.getAllGranPrixesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getGranPrixRaw(requestParameters: GetGranPrixRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GranPrix>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getGranPrix.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/gran-prixes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GranPrixFromJSON(jsonValue));
    }

    /**
     */
    async getGranPrix(requestParameters: GetGranPrixRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GranPrix> {
        const response = await this.getGranPrixRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async partialUpdateGranPrixRaw(requestParameters: PartialUpdateGranPrixRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GranPrix>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling partialUpdateGranPrix.');
        }

        if (requestParameters.granPrix === null || requestParameters.granPrix === undefined) {
            throw new runtime.RequiredError('granPrix','Required parameter requestParameters.granPrix was null or undefined when calling partialUpdateGranPrix.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/gran-prixes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: GranPrixToJSON(requestParameters.granPrix),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GranPrixFromJSON(jsonValue));
    }

    /**
     */
    async partialUpdateGranPrix(requestParameters: PartialUpdateGranPrixRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GranPrix> {
        const response = await this.partialUpdateGranPrixRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async updateGranPrixRaw(requestParameters: UpdateGranPrixRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GranPrix>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateGranPrix.');
        }

        if (requestParameters.granPrix === null || requestParameters.granPrix === undefined) {
            throw new runtime.RequiredError('granPrix','Required parameter requestParameters.granPrix was null or undefined when calling updateGranPrix.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/gran-prixes/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: GranPrixToJSON(requestParameters.granPrix),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GranPrixFromJSON(jsonValue));
    }

    /**
     */
    async updateGranPrix(requestParameters: UpdateGranPrixRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GranPrix> {
        const response = await this.updateGranPrixRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
