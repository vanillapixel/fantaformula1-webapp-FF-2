/* tslint:disable */
/* eslint-disable */
/**
 * Fanta F 1 API
 * Fanta F 1 API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  JWTToken,
  LoginVM,
} from '../models';
import {
    JWTTokenFromJSON,
    JWTTokenToJSON,
    LoginVMFromJSON,
    LoginVMToJSON,
} from '../models';

export interface AuthorizeRequest {
    loginVM: LoginVM;
}

/**
 * 
 */
export class UserJwtControllerApi extends runtime.BaseAPI {

    /**
     */
    async authorizeRaw(requestParameters: AuthorizeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JWTToken>> {
        if (requestParameters.loginVM === null || requestParameters.loginVM === undefined) {
            throw new runtime.RequiredError('loginVM','Required parameter requestParameters.loginVM was null or undefined when calling authorize.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/authenticate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LoginVMToJSON(requestParameters.loginVM),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => JWTTokenFromJSON(jsonValue));
    }

    /**
     */
    async authorize(requestParameters: AuthorizeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JWTToken> {
        const response = await this.authorizeRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
