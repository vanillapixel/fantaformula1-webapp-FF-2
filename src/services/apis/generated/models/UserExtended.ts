/* tslint:disable */
/* eslint-disable */
/**
 * Fanta F 1 API
 * Fanta F 1 API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface UserExtended
 */
export interface UserExtended {
    /**
     * 
     * @type {number}
     * @memberof UserExtended
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof UserExtended
     */
    avatarFilename?: string;
    /**
     * 
     * @type {string}
     * @memberof UserExtended
     */
    avatarFilepath?: string;
    /**
     * 
     * @type {string}
     * @memberof UserExtended
     */
    avatarUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof UserExtended
     */
    telephone?: string;
    /**
     * 
     * @type {string}
     * @memberof UserExtended
     */
    type?: UserExtendedTypeEnum;
    /**
     * 
     * @type {User}
     * @memberof UserExtended
     */
    user?: User;
}


/**
 * @export
 */
export const UserExtendedTypeEnum = {
    Administrator: 'ADMINISTRATOR',
    Player: 'PLAYER'
} as const;
export type UserExtendedTypeEnum = typeof UserExtendedTypeEnum[keyof typeof UserExtendedTypeEnum];


/**
 * Check if a given object implements the UserExtended interface.
 */
export function instanceOfUserExtended(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserExtendedFromJSON(json: any): UserExtended {
    return UserExtendedFromJSONTyped(json, false);
}

export function UserExtendedFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserExtended {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'avatarFilename': !exists(json, 'avatarFilename') ? undefined : json['avatarFilename'],
        'avatarFilepath': !exists(json, 'avatarFilepath') ? undefined : json['avatarFilepath'],
        'avatarUrl': !exists(json, 'avatarUrl') ? undefined : json['avatarUrl'],
        'telephone': !exists(json, 'telephone') ? undefined : json['telephone'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
    };
}

export function UserExtendedToJSON(value?: UserExtended | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'avatarFilename': value.avatarFilename,
        'avatarFilepath': value.avatarFilepath,
        'avatarUrl': value.avatarUrl,
        'telephone': value.telephone,
        'type': value.type,
        'user': UserToJSON(value.user),
    };
}

