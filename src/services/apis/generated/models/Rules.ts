/* tslint:disable */
/* eslint-disable */
/**
 * Fanta F 1 API
 * Fanta F 1 API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Rules
 */
export interface Rules {
    /**
     * 
     * @type {number}
     * @memberof Rules
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Rules
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Rules
     */
    rulesType?: RulesRulesTypeEnum;
}


/**
 * @export
 */
export const RulesRulesTypeEnum = {
    Fantasyformula1Managment: 'FANTASYFORMULA1MANAGMENT'
} as const;
export type RulesRulesTypeEnum = typeof RulesRulesTypeEnum[keyof typeof RulesRulesTypeEnum];


/**
 * Check if a given object implements the Rules interface.
 */
export function instanceOfRules(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RulesFromJSON(json: any): Rules {
    return RulesFromJSONTyped(json, false);
}

export function RulesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Rules {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'rulesType': !exists(json, 'rulesType') ? undefined : json['rulesType'],
    };
}

export function RulesToJSON(value?: Rules | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'rulesType': value.rulesType,
    };
}

