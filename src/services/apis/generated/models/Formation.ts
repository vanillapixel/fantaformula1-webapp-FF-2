/* tslint:disable */
/* eslint-disable */
/**
 * Fanta F 1 API
 * Fanta F 1 API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Formation
 */
export interface Formation {
    /**
     * 
     * @type {number}
     * @memberof Formation
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Formation
     */
    drs?: FormationDrsEnum;
    /**
     * 
     * @type {string}
     * @memberof Formation
     */
    formationType?: FormationFormationTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof Formation
     */
    finalScore?: number;
}


/**
 * @export
 */
export const FormationDrsEnum = {
    Active: 'ACTIVE',
    Disactive: 'DISACTIVE'
} as const;
export type FormationDrsEnum = typeof FormationDrsEnum[keyof typeof FormationDrsEnum];

/**
 * @export
 */
export const FormationFormationTypeEnum = {
    Qualify: 'QUALIFY',
    Race: 'RACE'
} as const;
export type FormationFormationTypeEnum = typeof FormationFormationTypeEnum[keyof typeof FormationFormationTypeEnum];


/**
 * Check if a given object implements the Formation interface.
 */
export function instanceOfFormation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FormationFromJSON(json: any): Formation {
    return FormationFromJSONTyped(json, false);
}

export function FormationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Formation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'drs': !exists(json, 'drs') ? undefined : json['drs'],
        'formationType': !exists(json, 'formationType') ? undefined : json['formationType'],
        'finalScore': !exists(json, 'finalScore') ? undefined : json['finalScore'],
    };
}

export function FormationToJSON(value?: Formation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'drs': value.drs,
        'formationType': value.formationType,
        'finalScore': value.finalScore,
    };
}

